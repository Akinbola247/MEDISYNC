{"ast":null,"code":"import _styled from \"styled-components\"; // styling\nvar _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/UI/Checkbox/index.jsx\";\nimport theme from 'styled-theming';\nimport { colors, light, flex } from '@styles/vars';\n\n// utils\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Square = _styled.div.withConfig({\n  displayName: \"Checkbox__Square\",\n  componentId: \"sc-14purv5-0\"\n})([\"input{display:none;&:checked + label span{opacity:1;}}label{\", \";\", \";width:20px;height:20px;border-radius:4px;background-color:\", \";cursor:pointer;transition:var(--transition);position:relative;span{display:block;border-radius:2px;background-color:\", \";width:12px;height:12px;transition:opacity var(--transition);opacity:0;}}\"], flex.col, flex.center, theme('theme', {\n  light: colors.light_gray,\n  dark: light.text\n}), colors.blue);\n_c = Square;\nconst Basic = _styled.div.withConfig({\n  displayName: \"Checkbox__Basic\",\n  componentId: \"sc-14purv5-1\"\n})([\"input{display:none;&:checked + label{color:\", \";}}label{color:#BBCDD9;transition:var(--transition);&:hover,&:focus{color:\", \";}}\"], colors.blue, colors.blue);\n_c2 = Basic;\nconst Checkbox = ({\n  variant,\n  handler,\n  checked,\n  id\n}) => {\n  const commonProps = {\n    type: 'checkbox',\n    id,\n    defaultChecked: checked,\n    onChange: handler\n  };\n  const Layout = () => {\n    switch (variant) {\n      default:\n      case 'square':\n        return /*#__PURE__*/_jsxDEV(Square, {\n          className: \"checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...commonProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: id,\n            tabIndex: 0,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this);\n      case 'basic':\n        return /*#__PURE__*/_jsxDEV(Basic, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...commonProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: id,\n            tabIndex: 0,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon icon-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 12\n  }, this);\n};\n_c3 = Checkbox;\nCheckbox.propTypes = {\n  variant: PropTypes.oneOf(['square', 'basic']).isRequired,\n  handler: PropTypes.func,\n  checked: PropTypes.bool,\n  id: PropTypes.string\n};\nexport default Checkbox;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Basic\");\n$RefreshReg$(_c3, \"Checkbox\");","map":{"version":3,"names":["_jsxFileName","theme","colors","light","flex","PropTypes","jsxDEV","_jsxDEV","Square","styled","div","withConfig","displayName","componentId","col","center","light_gray","dark","text","blue","_c","Basic","_c2","Checkbox","variant","handler","checked","id","commonProps","type","defaultChecked","onChange","Layout","className","children","fileName","lineNumber","columnNumber","htmlFor","tabIndex","_c3","propTypes","oneOf","isRequired","func","bool","string","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/UI/Checkbox/index.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {colors, light, flex} from '@styles/vars'\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Square = styled.div`\n  input {\n    display: none;\n\n    &:checked + label span {\n      opacity: 1;\n    }\n  }\n\n  label {\n    ${flex.col};\n    ${flex.center};\n    width: 20px;\n    height: 20px;\n    border-radius: 4px;\n    background-color: ${theme('theme', {\n      light: colors.light_gray,\n      dark: light.text\n    })};\n    cursor: pointer;\n    transition: var(--transition);\n    position: relative;\n\n    span {\n      display: block;\n      border-radius: 2px;\n      background-color: ${colors.blue};\n      width: 12px;\n      height: 12px;\n      transition: opacity var(--transition);\n      opacity: 0;\n    }\n  }\n`\n\nconst Basic = styled.div`\n  input {\n    display: none;\n    &:checked + label {\n      color: ${colors.blue};\n    }\n  }\n\n  label {\n    color: #BBCDD9;\n    transition: var(--transition);\n\n    &:hover, &:focus {\n      color: ${colors.blue};\n    }\n  }\n`;\n\nconst Checkbox = ({variant, handler, checked, id}) => {\n    const commonProps = {\n        type: 'checkbox',\n        id,\n        defaultChecked: checked,\n        onChange: handler\n    }\n\n    const Layout = () => {\n        switch (variant) {\n            default:\n            case 'square':\n                return (\n                    <Square className=\"checkbox\">\n                        <input {...commonProps} />\n                        <label htmlFor={id} tabIndex={0}>\n                            <span></span>\n                        </label>\n                    </Square>\n                )\n            case 'basic':\n                return (\n                    <Basic>\n                        <input {...commonProps} />\n                        <label htmlFor={id} tabIndex={0}>\n                            <i className=\"icon icon-check\"/>\n                        </label>\n                    </Basic>\n                )\n        }\n    }\n\n    return <Layout/>\n}\n\nCheckbox.propTypes = {\n    variant: PropTypes.oneOf(['square', 'basic']).isRequired,\n    handler: PropTypes.func,\n    checked: PropTypes.bool,\n    id: PropTypes.string\n}\n\nexport default Checkbox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}