{"ast":null,"code":"var _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/components/AppointmentsCalendar/MonthlyNavigation/index.jsx\";\n// components\nimport Navigator from '@ui/Navigator';\n\n// utils\nimport moment from 'moment/moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MonthlyNavigation = ({\n  date,\n  setter\n}) => {\n  const calendarMonth = moment(date).month();\n  const currentMonth = moment().month();\n  const handleMonthNavigation = e => {\n    if (e.currentTarget.dataset.direction === 'prev') {\n      setter(moment(date).subtract(1, 'month').toDate());\n    } else {\n      setter(moment(date).add(1, 'month').toDate());\n    }\n  };\n  let label;\n  if (currentMonth === calendarMonth) label = 'This month';else if (currentMonth + 1 === calendarMonth) label = 'Next month';else if (currentMonth - 1 === calendarMonth) label = 'Last month';else label = `${moment(date).format('MMMM')}`;\n  return /*#__PURE__*/_jsxDEV(Navigator, {\n    handler: handleMonthNavigation,\n    text: label,\n    prevDisabled: calendarMonth === 0,\n    nextDisabled: calendarMonth === 11\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c = MonthlyNavigation;\nexport default MonthlyNavigation;\nvar _c;\n$RefreshReg$(_c, \"MonthlyNavigation\");","map":{"version":3,"names":["Navigator","moment","jsxDEV","_jsxDEV","MonthlyNavigation","date","setter","calendarMonth","month","currentMonth","handleMonthNavigation","e","currentTarget","dataset","direction","subtract","toDate","add","label","format","handler","text","prevDisabled","nextDisabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/components/AppointmentsCalendar/MonthlyNavigation/index.jsx"],"sourcesContent":["// components\nimport Navigator from '@ui/Navigator';\n\n// utils\nimport moment from 'moment/moment';\n\nconst MonthlyNavigation = ({date, setter}) => {\n    const calendarMonth = moment(date).month();\n    const currentMonth = moment().month();\n\n    const handleMonthNavigation = e => {\n        if (e.currentTarget.dataset.direction === 'prev') {\n            setter(moment(date).subtract(1, 'month').toDate());\n        } else {\n            setter(moment(date).add(1, 'month').toDate());\n        }\n    }\n\n    let label;\n    if (currentMonth === calendarMonth) label = 'This month';\n    else if (currentMonth + 1 === calendarMonth) label = 'Next month';\n    else if (currentMonth - 1 === calendarMonth) label = 'Last month';\n    else label = `${moment(date).format('MMMM')}`;\n\n    return (\n        <Navigator handler={handleMonthNavigation}\n                   text={label}\n                   prevDisabled={calendarMonth === 0}\n                   nextDisabled={calendarMonth === 11}/>\n    )\n}\n\nexport default MonthlyNavigation;"],"mappings":";AAAA;AACA,OAAOA,SAAS,MAAM,eAAe;;AAErC;AACA,OAAOC,MAAM,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,iBAAiB,GAAGA,CAAC;EAACC,IAAI;EAAEC;AAAM,CAAC,KAAK;EAC1C,MAAMC,aAAa,GAAGN,MAAM,CAACI,IAAI,CAAC,CAACG,KAAK,CAAC,CAAC;EAC1C,MAAMC,YAAY,GAAGR,MAAM,CAAC,CAAC,CAACO,KAAK,CAAC,CAAC;EAErC,MAAME,qBAAqB,GAAGC,CAAC,IAAI;IAC/B,IAAIA,CAAC,CAACC,aAAa,CAACC,OAAO,CAACC,SAAS,KAAK,MAAM,EAAE;MAC9CR,MAAM,CAACL,MAAM,CAACI,IAAI,CAAC,CAACU,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC;IACtD,CAAC,MAAM;MACHV,MAAM,CAACL,MAAM,CAACI,IAAI,CAAC,CAACY,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAACD,MAAM,CAAC,CAAC,CAAC;IACjD;EACJ,CAAC;EAED,IAAIE,KAAK;EACT,IAAIT,YAAY,KAAKF,aAAa,EAAEW,KAAK,GAAG,YAAY,CAAC,KACpD,IAAIT,YAAY,GAAG,CAAC,KAAKF,aAAa,EAAEW,KAAK,GAAG,YAAY,CAAC,KAC7D,IAAIT,YAAY,GAAG,CAAC,KAAKF,aAAa,EAAEW,KAAK,GAAG,YAAY,CAAC,KAC7DA,KAAK,GAAI,GAAEjB,MAAM,CAACI,IAAI,CAAC,CAACc,MAAM,CAAC,MAAM,CAAE,EAAC;EAE7C,oBACIhB,OAAA,CAACH,SAAS;IAACoB,OAAO,EAAEV,qBAAsB;IAC/BW,IAAI,EAAEH,KAAM;IACZI,YAAY,EAAEf,aAAa,KAAK,CAAE;IAClCgB,YAAY,EAAEhB,aAAa,KAAK;EAAG;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAExD,CAAC;AAAAC,EAAA,GAxBKxB,iBAAiB;AA0BvB,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}