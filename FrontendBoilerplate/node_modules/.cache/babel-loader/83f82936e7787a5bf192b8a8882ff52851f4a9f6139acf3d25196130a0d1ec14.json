{"ast":null,"code":"var _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/contexts/interfaceContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InterfaceContext = /*#__PURE__*/createContext(undefined);\nexport const InterfaceContextAPI = ({\n  children\n}) => {\n  _s();\n  const page = document.documentElement;\n  const browserTheme = window.matchMedia('(prefers-color-scheme: dark)');\n  const persisted = JSON.parse(localStorage.getItem('preferences') || '{}');\n  const [isDarkMode, setIsDarkMode] = useState(persisted ? persisted.isDarkMode : browserTheme.matches);\n  const [isContrastMode, setIsContrastMode] = useState(persisted.isContrastMode || false);\n  const [fontScale, setFontScale] = useState(persisted.fontScale || 1);\n  const [direction, setDirection] = useState(persisted.direction || 'ltr');\n  const [isLayoutEditable, setIsLayoutEditable] = useState(false);\n  const stopTransition = () => {\n    page.classList.add('no-transition');\n    setTimeout(() => page.classList.remove('no-transition'), 100);\n  };\n  const savePreferences = () => {\n    localStorage.setItem('preferences', JSON.stringify({\n      isDarkMode,\n      isContrastMode,\n      fontScale,\n      direction\n    }));\n  };\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n    stopTransition();\n  };\n  const toggleContrastMode = () => {\n    setIsContrastMode(!isContrastMode);\n    page.classList.toggle('contrast');\n  };\n  const changeFontScale = scale => {\n    setFontScale(scale);\n    stopTransition();\n  };\n  const toggleDirection = () => {\n    setDirection(direction === 'ltr' ? 'rtl' : 'ltr');\n    page.setAttribute('dir', direction);\n  };\n  const toggleLayoutEditable = () => {\n    setIsLayoutEditable(!isLayoutEditable);\n  };\n  useEffect(() => {\n    page.style.setProperty('--font-scale', fontScale);\n    page.dataset.ratio = `${window.devicePixelRatio}`;\n    savePreferences();\n    window.addEventListener('resize', () => setIsLayoutEditable(false));\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event => {\n      if (event.matches) {\n        setIsDarkMode(true);\n      } else {\n        setIsDarkMode(false);\n      }\n      stopTransition();\n      savePreferences();\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDarkMode, isContrastMode, fontScale, direction, window.devicePixelRatio]);\n  return /*#__PURE__*/_jsxDEV(InterfaceContext.Provider, {\n    value: {\n      isDarkMode,\n      isContrastMode,\n      fontScale,\n      direction,\n      toggleDarkMode,\n      toggleContrastMode,\n      changeFontScale,\n      toggleDirection,\n      isLayoutEditable,\n      toggleLayoutEditable,\n      setIsLayoutEditable\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(InterfaceContextAPI, \"VPBba4d6qhigwBpmskbKXmNSu74=\");\n_c = InterfaceContextAPI;\nexport const useInterfaceContext = () => {\n  _s2();\n  return useContext(InterfaceContext);\n};\n_s2(useInterfaceContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"InterfaceContextAPI\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","InterfaceContext","undefined","InterfaceContextAPI","children","_s","page","document","documentElement","browserTheme","window","matchMedia","persisted","JSON","parse","localStorage","getItem","isDarkMode","setIsDarkMode","matches","isContrastMode","setIsContrastMode","fontScale","setFontScale","direction","setDirection","isLayoutEditable","setIsLayoutEditable","stopTransition","classList","add","setTimeout","remove","savePreferences","setItem","stringify","toggleDarkMode","toggleContrastMode","toggle","changeFontScale","scale","toggleDirection","setAttribute","toggleLayoutEditable","style","setProperty","dataset","ratio","devicePixelRatio","addEventListener","event","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useInterfaceContext","_s2","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/contexts/interfaceContext.js"],"sourcesContent":["import {createContext, useContext, useEffect, useState} from 'react';\n\nexport const InterfaceContext = createContext(undefined);\n\nexport const InterfaceContextAPI = ({children}) => {\n    const page = document.documentElement;\n    const browserTheme = window.matchMedia('(prefers-color-scheme: dark)');\n    const persisted = JSON.parse(localStorage.getItem('preferences') || '{}');\n\n    const [isDarkMode, setIsDarkMode] = useState(persisted ? persisted.isDarkMode : browserTheme.matches);\n    const [isContrastMode, setIsContrastMode] = useState(persisted.isContrastMode || false);\n    const [fontScale, setFontScale] = useState(persisted.fontScale || 1);\n    const [direction, setDirection] = useState(persisted.direction || 'ltr');\n    const [isLayoutEditable, setIsLayoutEditable] = useState(false);\n\n    const stopTransition = () => {\n        page.classList.add('no-transition');\n        setTimeout(() => page.classList.remove('no-transition'), 100);\n    }\n\n    const savePreferences = () => {\n        localStorage.setItem('preferences', JSON.stringify({\n            isDarkMode,\n            isContrastMode,\n            fontScale,\n            direction\n        }));\n    }\n\n    const toggleDarkMode = () => {\n        setIsDarkMode(!isDarkMode);\n        stopTransition();\n    }\n\n    const toggleContrastMode = () => {\n        setIsContrastMode(!isContrastMode);\n        page.classList.toggle('contrast');\n    }\n\n    const changeFontScale = (scale) => {\n        setFontScale(scale);\n        stopTransition();\n    }\n\n    const toggleDirection = () => {\n        setDirection(direction === 'ltr' ? 'rtl' : 'ltr');\n        page.setAttribute('dir', direction);\n    }\n\n    const toggleLayoutEditable = () => {\n        setIsLayoutEditable(!isLayoutEditable);\n    }\n\n    useEffect(() => {\n        page.style.setProperty('--font-scale', fontScale);\n        page.dataset.ratio = `${window.devicePixelRatio}`;\n        savePreferences();\n\n        window.addEventListener('resize', () => setIsLayoutEditable(false));\n        window\n            .matchMedia('(prefers-color-scheme: dark)')\n            .addEventListener('change', event => {\n                if (event.matches) {\n                    setIsDarkMode(true);\n                } else {\n                    setIsDarkMode(false);\n                }\n                stopTransition();\n                savePreferences();\n            })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isDarkMode, isContrastMode, fontScale, direction, window.devicePixelRatio]);\n\n    return (\n        <InterfaceContext.Provider\n            value={{\n                isDarkMode,\n                isContrastMode,\n                fontScale,\n                direction,\n                toggleDarkMode,\n                toggleContrastMode,\n                changeFontScale,\n                toggleDirection,\n                isLayoutEditable,\n                toggleLayoutEditable,\n                setIsLayoutEditable\n            }}>\n            {children}\n        </InterfaceContext.Provider>\n    );\n}\n\nexport const useInterfaceContext = () => useContext(InterfaceContext);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}