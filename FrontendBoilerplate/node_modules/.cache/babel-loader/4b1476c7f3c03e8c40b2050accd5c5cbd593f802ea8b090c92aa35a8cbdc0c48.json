{"ast":null,"code":"var _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/widgets/PaymentsOverview/index.jsx\",\n  _s = $RefreshSig$();\n// styling\nimport { colors } from '@styles/vars';\n\n// styled components\nimport { Total, List } from '@widgets/PaymentsOverview/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetNav from '@components/Widget/WidgetNav';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport LabeledProgress from '@ui/LabeledProgress';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\n\n// utils\nimport { getWeekArray } from '@utils/dates';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentsOverview = () => {\n  _s();\n  const week1 = moment().week() - 1,\n    week2 = moment().week() - 2,\n    week3 = moment().week() - 3;\n  const weeks = [week1, week2, week3];\n  const {\n    index,\n    navigate\n  } = useArrayNav(weeks);\n  const goal = 300;\n  const normalise = value => value / (goal / 100);\n  const data = {\n    [week1]: {\n      sun: 124.87,\n      mon: 81.12,\n      tue: 155,\n      wed: 268.14,\n      thu: 120,\n      fri: 20.11,\n      sat: 69.96\n    },\n    [week2]: {\n      sun: 204.11,\n      mon: 20.58,\n      tue: 104,\n      wed: 55.32,\n      thu: 302.80,\n      fri: 89.11,\n      sat: 0\n    },\n    [week3]: {\n      sun: 84.19,\n      mon: 120.90,\n      tue: 23.87,\n      wed: 90.80,\n      thu: 150.31,\n      fri: 47.19,\n      sat: 167.96\n    }\n  };\n  const calculateTotal = data => {\n    let total = 0;\n    for (let key in data) {\n      total += data[key];\n    }\n    return total.toFixed(2);\n  };\n  const setText = selected => {\n    const weeksOfYear = getWeekArray();\n    if (selected === week1) {\n      return 'last week';\n    } else {\n      for (let i = 0; i < weeksOfYear.length; i++) {\n        if (weeksOfYear[i].week === selected) {\n          return `${weeksOfYear[i].startShort} - ${weeksOfYear[i].endShort}`;\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Widget, {\n    name: \"PaymentsOverview\",\n    children: [/*#__PURE__*/_jsxDEV(WidgetNav, {\n      title: \"Payments\",\n      handler: navigate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WidgetBody, {\n      sidePadding: true,\n      style: {\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Total, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: [\"\\u20AC \", calculateTotal(data[weeks[index]])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), \" was earned \", setText(weeks[index])]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: Object.keys(data[weeks[index]]).map(key => {\n          const value = data[weeks[index]][key];\n          return /*#__PURE__*/_jsxDEV(LabeledProgress, {\n            label: key,\n            value: normalise(value),\n            barHeight: 188,\n            color: value < 50 ? colors.red : colors.purple\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(PaymentsOverview, \"NDlSWrBJkdiWPYlouqfSQocDMlc=\", false, function () {\n  return [useArrayNav];\n});\n_c = PaymentsOverview;\nexport default PaymentsOverview;\nvar _c;\n$RefreshReg$(_c, \"PaymentsOverview\");","map":{"version":3,"names":["colors","Total","List","Widget","WidgetNav","WidgetBody","LabeledProgress","useArrayNav","getWeekArray","moment","jsxDEV","_jsxDEV","PaymentsOverview","_s","week1","week","week2","week3","weeks","index","navigate","goal","normalise","value","data","sun","mon","tue","wed","thu","fri","sat","calculateTotal","total","key","toFixed","setText","selected","weeksOfYear","i","length","startShort","endShort","name","children","title","handler","fileName","_jsxFileName","lineNumber","columnNumber","sidePadding","style","justifyContent","className","Object","keys","map","label","barHeight","color","red","purple","_c","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/widgets/PaymentsOverview/index.jsx"],"sourcesContent":["// styling\nimport {colors} from '@styles/vars';\n\n// styled components\nimport {Total, List} from '@widgets/PaymentsOverview/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetNav from '@components/Widget/WidgetNav';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport LabeledProgress from '@ui/LabeledProgress';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\n\n// utils\nimport {getWeekArray} from '@utils/dates';\nimport moment from 'moment';\n\nconst PaymentsOverview = () => {\n    const week1 = moment().week() - 1, week2 = moment().week() - 2, week3 = moment().week() - 3;\n    const weeks = [week1, week2, week3];\n    const {index, navigate} = useArrayNav(weeks);\n\n    const goal = 300;\n    const normalise = value => (value / (goal / 100));\n\n    const data = {\n        [week1]: {\n            sun: 124.87,\n            mon: 81.12,\n            tue: 155,\n            wed: 268.14,\n            thu: 120,\n            fri: 20.11,\n            sat: 69.96\n        },\n        [week2]: {\n            sun: 204.11,\n            mon: 20.58,\n            tue: 104,\n            wed: 55.32,\n            thu: 302.80,\n            fri: 89.11,\n            sat: 0\n        },\n        [week3]: {\n            sun: 84.19,\n            mon: 120.90,\n            tue: 23.87,\n            wed: 90.80,\n            thu: 150.31,\n            fri: 47.19,\n            sat: 167.96\n        }\n    }\n\n    const calculateTotal = (data) => {\n        let total = 0;\n        for (let key in data) {\n            total += data[key];\n        }\n        return total.toFixed(2);\n    }\n\n    const setText = (selected) => {\n        const weeksOfYear = getWeekArray();\n        if (selected === week1) {\n            return 'last week';\n        } else {\n            for (let i = 0; i < weeksOfYear.length; i++) {\n                if (weeksOfYear[i].week === selected) {\n                    return `${weeksOfYear[i].startShort} - ${weeksOfYear[i].endShort}`;\n                }\n            }\n        }\n    };\n\n    return (\n        <Widget name=\"PaymentsOverview\">\n            <WidgetNav title=\"Payments\" handler={navigate}/>\n            <WidgetBody sidePadding={true} style={{justifyContent: 'space-between'}}>\n                <Total>\n                    <span className=\"highlight\">â‚¬ {calculateTotal(data[weeks[index]])}</span> was\n                    earned {setText(weeks[index])}\n                </Total>\n                <List>\n                    {\n                        Object.keys(data[weeks[index]]).map(key => {\n                            const value = data[weeks[index]][key];\n                            return (\n                                <LabeledProgress key={key}\n                                                 label={key}\n                                                 value={normalise(value)}\n                                                 barHeight={188}\n                                                 color={value < 50 ? colors.red : colors.purple}\n                                />\n                            )\n                        })\n                    }\n                </List>\n            </WidgetBody>\n        </Widget>\n    );\n}\n\nexport default PaymentsOverview;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}