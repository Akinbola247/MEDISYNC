{"ast":null,"code":"import _styled from \"styled-components\"; // styling\nvar _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/UI/Timestamp/index.jsx\";\nimport { fonts, textSizes } from '@styles/vars';\n\n// utils\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wrapper = _styled.span.withConfig({\n  displayName: \"Timestamp__Wrapper\",\n  componentId: \"sc-1s0riyd-0\"\n})([\"display:flex;gap:8px;font-family:\", \";font-size:\", \";text-transform:uppercase;\"], fonts.accent, textSizes['10']);\n_c = Wrapper;\nconst Timestamp = ({\n  date,\n  text,\n  time = false\n}) => {\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [text && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: moment(date).format('DD MMM YYYY')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), time && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: moment(date).format('hh:mm A')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Timestamp;\nexport default Timestamp;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Timestamp\");","map":{"version":3,"names":["_jsxFileName","fonts","textSizes","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","Wrapper","styled","span","withConfig","displayName","componentId","accent","_c","Timestamp","date","text","time","children","fileName","lineNumber","columnNumber","format","_c2","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/UI/Timestamp/index.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport {fonts, textSizes} from '@styles/vars';\n\n// utils\nimport moment from 'moment';\n\nconst Wrapper = styled.span`\n  display: flex;\n  gap: 8px;\n  font-family: ${fonts.accent};\n  font-size: ${textSizes['10']};\n  text-transform: uppercase;\n`\n\nconst Timestamp = ({date, text, time = false}) => {\n    return (\n        <Wrapper>\n            {text && <span>{text}</span>}\n            <span>{moment(date).format('DD MMM YYYY')}</span>\n            {\n                time &&\n                <>\n                    <span>/</span>\n                    <span>{moment(date).format('hh:mm A')}</span>\n                </>\n            }\n        </Wrapper>\n    )\n}\n\nexport default Timestamp;"],"mappings":"yCAAA;AAAA,IAAAA,YAAA;AAEA,SAAQC,KAAK,EAAEC,SAAS,QAAO,cAAc;;AAE7C;AACA,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,OAAO,GAAGC,OAAM,CAACC,IAAI,CAAAC,UAAA;EAAAC,WAAA;EAAAC,WAAA;AAAA,uFAGVZ,KAAK,CAACa,MAAM,EACdZ,SAAS,CAAC,IAAI,CAAC,CAE7B;AAAAa,EAAA,GANKP,OAAO;AAQb,MAAMQ,SAAS,GAAGA,CAAC;EAACC,IAAI;EAAEC,IAAI;EAAEC,IAAI,GAAG;AAAK,CAAC,KAAK;EAC9C,oBACId,OAAA,CAACG,OAAO;IAAAY,QAAA,GACHF,IAAI,iBAAIb,OAAA;MAAAe,QAAA,EAAOF;IAAI;MAAAG,QAAA,EAAArB,YAAA;MAAAsB,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5BlB,OAAA;MAAAe,QAAA,EAAOjB,MAAM,CAACc,IAAI,CAAC,CAACO,MAAM,CAAC,aAAa;IAAC;MAAAH,QAAA,EAAArB,YAAA;MAAAsB,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAE7CJ,IAAI,iBACJd,OAAA,CAAAE,SAAA;MAAAa,QAAA,gBACIf,OAAA;QAAAe,QAAA,EAAM;MAAC;QAAAC,QAAA,EAAArB,YAAA;QAAAsB,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACdlB,OAAA;QAAAe,QAAA,EAAOjB,MAAM,CAACc,IAAI,CAAC,CAACO,MAAM,CAAC,SAAS;MAAC;QAAAH,QAAA,EAAArB,YAAA;QAAAsB,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,eAC/C,CAAC;EAAA;IAAAF,QAAA,EAAArB,YAAA;IAAAsB,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAElB,CAAC;AAAAE,GAAA,GAdKT,SAAS;AAgBf,eAAeA,SAAS;AAAC,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}