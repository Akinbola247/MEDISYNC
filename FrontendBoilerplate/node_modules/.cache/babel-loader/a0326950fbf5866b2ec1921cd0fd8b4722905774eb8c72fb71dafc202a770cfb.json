{"ast":null,"code":"var _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/widgets/NextPatient/index.jsx\",\n  _s = $RefreshSig$();\n// styled components\nimport { Main } from './style';\nimport { Main as SlideContent, Footer } from '@components/AppointmentItem/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport WidgetNav from '@components/Widget/WidgetNav';\nimport Avatar from '@ui/Avatar';\nimport ShapeButton from '@ui/ShapeButton';\nimport Truncated from '@components/Truncated';\nimport MenuDots from '@ui/MenuDots';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { EffectFade, Thumbs } from 'swiper';\n\n// utils\nimport { nanoid } from 'nanoid';\nimport moment from 'moment';\n\n// hooks\nimport { useState, useEffect } from 'react';\nimport { useInterfaceContext } from '@contexts/interfaceContext';\n\n// data placeholder\nimport { appointments } from '@db/appointments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NextPatient = () => {\n  _s();\n  const [mainSwiper, setMainSwiper] = useState(null);\n  const [dateSwiper, setDateSwiper] = useState(null);\n  const {\n    direction\n  } = useInterfaceContext();\n  const config = {\n    effect: 'fade',\n    fadeEffect: {\n      crossFade: true\n    },\n    modules: [EffectFade, Thumbs],\n    loop: true,\n    dir: direction,\n    speed: 700\n  };\n  useEffect(() => {\n    if (mainSwiper && dateSwiper) {\n      mainSwiper.changeLanguageDirection(direction);\n      dateSwiper.changeLanguageDirection(direction);\n      mainSwiper.update();\n      dateSwiper.update();\n    }\n  }, [direction, mainSwiper, dateSwiper]);\n  const handleNavigation = e => {\n    if (e.currentTarget.dataset.direction === 'next') {\n      mainSwiper.slideNext();\n    } else {\n      mainSwiper.slidePrev();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Widget, {\n    name: \"NextPatient\",\n    children: [/*#__PURE__*/_jsxDEV(WidgetNav, {\n      title: \"Next Patient\",\n      handler: handleNavigation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WidgetBody, {\n      style: {\n        paddingBottom: 18\n      },\n      children: [/*#__PURE__*/_jsxDEV(Main, {\n        children: [/*#__PURE__*/_jsxDEV(Swiper, {\n          onSwiper: swiper => setMainSwiper(swiper),\n          thumbs: {\n            swiper: dateSwiper\n          },\n          ...config,\n          children: appointments.map(data => {\n            const {\n              patient,\n              type\n            } = data;\n            return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n              children: /*#__PURE__*/_jsxDEV(SlideContent, {\n                style: {\n                  marginBottom: 0\n                },\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  avatar: patient.avatar,\n                  alt: patient.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info\",\n                  children: [/*#__PURE__*/_jsxDEV(Truncated, {\n                    className: \"name\",\n                    text: patient.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Truncated, {\n                    className: \"title\",\n                    text: type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 45\n              }, this)\n            }, nanoid(5), false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ShapeButton, {\n          shape: \"round\",\n          label: \"Call\",\n          icon: \"phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"details_item\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon icon-clock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n              onSwiper: swiper => setDateSwiper(swiper),\n              watchSlidesProgress: true,\n              ...config,\n              children: appointments.map(data => {\n                const {\n                  date\n                } = data;\n                return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"time\",\n                    children: moment(date).format('HH:mm')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 49\n                  }, this)\n                }, nanoid(5), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuDots, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(NextPatient, \"/wjAGFkO/uucm8WZQirx5y0Q6jY=\", false, function () {\n  return [useInterfaceContext];\n});\n_c = NextPatient;\nexport default NextPatient;\nvar _c;\n$RefreshReg$(_c, \"NextPatient\");","map":{"version":3,"names":["Main","SlideContent","Footer","Widget","WidgetBody","WidgetNav","Avatar","ShapeButton","Truncated","MenuDots","Swiper","SwiperSlide","EffectFade","Thumbs","nanoid","moment","useState","useEffect","useInterfaceContext","appointments","jsxDEV","_jsxDEV","NextPatient","_s","mainSwiper","setMainSwiper","dateSwiper","setDateSwiper","direction","config","effect","fadeEffect","crossFade","modules","loop","dir","speed","changeLanguageDirection","update","handleNavigation","e","currentTarget","dataset","slideNext","slidePrev","name","children","title","handler","fileName","_jsxFileName","lineNumber","columnNumber","style","paddingBottom","onSwiper","swiper","thumbs","map","data","patient","type","marginBottom","avatar","alt","className","text","shape","label","icon","watchSlidesProgress","date","format","_c","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/widgets/NextPatient/index.jsx"],"sourcesContent":["// styled components\nimport {Main} from './style';\nimport {Main as SlideContent, Footer} from '@components/AppointmentItem/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport WidgetNav from '@components/Widget/WidgetNav';\nimport Avatar from '@ui/Avatar';\nimport ShapeButton from '@ui/ShapeButton';\nimport Truncated from '@components/Truncated';\nimport MenuDots from '@ui/MenuDots';\nimport {Swiper, SwiperSlide} from 'swiper/react';\nimport {EffectFade, Thumbs} from 'swiper';\n\n// utils\nimport {nanoid} from 'nanoid';\nimport moment from 'moment';\n\n// hooks\nimport {useState, useEffect} from 'react';\nimport {useInterfaceContext} from '@contexts/interfaceContext';\n\n// data placeholder\nimport {appointments} from '@db/appointments';\n\nconst NextPatient = () => {\n    const [mainSwiper, setMainSwiper] = useState(null);\n    const [dateSwiper, setDateSwiper] = useState(null);\n    const {direction} = useInterfaceContext();\n\n    const config = {\n        effect: 'fade',\n        fadeEffect: {\n            crossFade: true\n        },\n        modules: [EffectFade, Thumbs],\n        loop: true,\n        dir: direction,\n        speed: 700\n    }\n\n    useEffect(() => {\n        if (mainSwiper && dateSwiper) {\n            mainSwiper.changeLanguageDirection(direction);\n            dateSwiper.changeLanguageDirection(direction);\n            mainSwiper.update();\n            dateSwiper.update();\n        }\n    }, [direction, mainSwiper, dateSwiper]);\n\n    const handleNavigation = e => {\n        if (e.currentTarget.dataset.direction === 'next') {\n            mainSwiper.slideNext();\n        } else {\n            mainSwiper.slidePrev();\n        }\n    }\n\n    return (\n        <Widget name=\"NextPatient\">\n            <WidgetNav title=\"Next Patient\" handler={handleNavigation}/>\n            <WidgetBody style={{paddingBottom: 18}}>\n                <Main>\n                    <Swiper onSwiper={(swiper) => setMainSwiper(swiper)} thumbs={{swiper: dateSwiper}} {...config}>\n                        {\n                            appointments.map(data => {\n                                    const {patient, type} = data;\n                                    return (\n                                        <SwiperSlide key={nanoid(5)}>\n                                            <SlideContent style={{marginBottom: 0}}>\n                                                <Avatar avatar={patient.avatar} alt={patient.name}/>\n                                                <div className=\"info\">\n                                                    <Truncated className=\"name\" text={patient.name}/>\n                                                    <Truncated className=\"title\" text={type}/>\n                                                </div>\n                                            </SlideContent>\n                                        </SwiperSlide>\n                                    )\n                                }\n                            )\n                        }\n                    </Swiper>\n                    <ShapeButton shape=\"round\" label=\"Call\" icon=\"phone\"/>\n                </Main>\n                <Footer>\n                    <div className=\"details\">\n                        <span className=\"details_item\">\n                            <i className=\"icon icon-clock\"/>\n                            <Swiper onSwiper={(swiper) => setDateSwiper(swiper)}\n                                    watchSlidesProgress={true}\n                                    {...config}>\n                                {\n                                    appointments.map(data => {\n                                        const {date} = data;\n                                        return (\n                                            <SwiperSlide key={nanoid(5)}>\n                                                <p className=\"time\">{moment(date).format('HH:mm')}</p>\n                                            </SwiperSlide>\n                                        )\n                                    })\n                                }\n                            </Swiper>\n                        </span>\n                    </div>\n                    <MenuDots/>\n                </Footer>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default NextPatient;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}