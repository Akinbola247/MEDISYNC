{"ast":null,"code":"var _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/components/Messenger/Main/index.jsx\",\n  _s = $RefreshSig$();\n// styled components\nimport { Container, Animation } from '@components/Messenger/style';\n\n// components\nimport Header from '@components/Messenger/Header';\nimport Message from '@components/Messenger/Message';\nimport Input from '@components/Messenger/Input';\nimport Lottie from 'lottie-react';\nimport GroupSeparator from '@ui/GroupSeparator';\nimport Tab from 'react-bootstrap/Tab';\nimport ScrollContainer from '@components/ScrollContainer';\n\n// utils\nimport moment from 'moment';\n\n// hooks\nimport { useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport useContentHeight from '@hooks/useContentHeight';\n\n// assets\nimport typing from '@assets/typing.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = ({\n  user,\n  variant\n}) => {\n  _s();\n  const doctor = useSelector(state => state['messenger']['doctor']);\n  const patient = useSelector(state => state['messenger']['patient']);\n  const db = variant === 'patient' ? patient : doctor;\n  const currentUser = user && db.find(item => item.id === user);\n  const headerRef = useRef(null);\n  const footerRef = useRef(null);\n  const height = useContentHeight(headerRef, footerRef);\n  const trackRef = useRef(null);\n  useEffect(() => {\n    if (trackRef.current) {\n      trackRef.current.scrollTop = trackRef.current.scrollHeight;\n    }\n  }, [db]);\n  useEffect(() => {\n    if (trackRef.current) {\n      trackRef.current.scrollTo(0, 0);\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [currentUser && /*#__PURE__*/_jsxDEV(Header, {\n      variant: variant,\n      user: currentUser,\n      elRef: headerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(ScrollContainer, {\n      height: height,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        ref: trackRef,\n        style: {\n          padding: '20px 0'\n        },\n        children: db.map(item => {\n          const uniqueDates = [...new Set(item.chatHistory.map(message => moment(message.date).format('DD.MM.YYYY')))];\n          return /*#__PURE__*/_jsxDEV(Tab.Pane, {\n            eventKey: item.id,\n            children: [uniqueDates.map(date => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group\",\n                children: [/*#__PURE__*/_jsxDEV(GroupSeparator, {\n                  text: date === moment().format('DD.MM.YYYY') ? 'Today' : date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 53\n                }, this), item.chatHistory.filter(message => moment(message.date).format('DD.MM.YYYY') === date).map((message, i) => {\n                  return /*#__PURE__*/_jsxDEV(Message, {\n                    data: message,\n                    senderName: `${item.firstName} ${item.lastName}`\n                  }, message.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 69\n                  }, this);\n                })]\n              }, `${item.id}-${date}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 49\n              }, this);\n            }), item.isTyping && /*#__PURE__*/_jsxDEV(Animation, {\n              children: /*#__PURE__*/_jsxDEV(Lottie, {\n                animationData: typing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 41\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      db: variant,\n      id: user,\n      elRef: footerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"VQhliEFNQIJUbbGZ7+ZuFWTB588=\", false, function () {\n  return [useSelector, useSelector, useContentHeight];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["Container","Animation","Header","Message","Input","Lottie","GroupSeparator","Tab","ScrollContainer","moment","useRef","useEffect","useSelector","useContentHeight","typing","jsxDEV","_jsxDEV","Main","user","variant","_s","doctor","state","patient","db","currentUser","find","item","id","headerRef","footerRef","height","trackRef","current","scrollTop","scrollHeight","scrollTo","children","elRef","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","style","padding","map","uniqueDates","Set","chatHistory","message","date","format","Pane","eventKey","text","filter","i","data","senderName","firstName","lastName","isTyping","animationData","_c","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/components/Messenger/Main/index.jsx"],"sourcesContent":["// styled components\nimport {Container, Animation} from '@components/Messenger/style';\n\n// components\nimport Header from '@components/Messenger/Header';\nimport Message from '@components/Messenger/Message';\nimport Input from '@components/Messenger/Input';\nimport Lottie from 'lottie-react';\nimport GroupSeparator from '@ui/GroupSeparator';\nimport Tab from 'react-bootstrap/Tab';\nimport ScrollContainer from '@components/ScrollContainer';\n\n// utils\nimport moment from 'moment';\n\n// hooks\nimport {useRef, useEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport useContentHeight from '@hooks/useContentHeight';\n\n// assets\nimport typing from '@assets/typing.json';\n\nconst Main = ({user, variant}) => {\n    const doctor = useSelector(state => state['messenger']['doctor']);\n    const patient = useSelector(state => state['messenger']['patient']);\n    const db = variant === 'patient' ? patient : doctor;\n    const currentUser = user && db.find(item => item.id === user);\n\n    const headerRef = useRef(null);\n    const footerRef = useRef(null);\n    const height = useContentHeight(headerRef, footerRef);\n\n    const trackRef = useRef(null);\n\n    useEffect(() => {\n        if (trackRef.current) {\n            trackRef.current.scrollTop = trackRef.current.scrollHeight;\n        }\n    }, [db]);\n\n    useEffect(() => {\n        if (trackRef.current) {\n            trackRef.current.scrollTo(0, 0);\n        }\n    }, [user]);\n\n    return (\n        <Container>\n            {\n                currentUser && <Header variant={variant} user={currentUser} elRef={headerRef}/>\n            }\n            <ScrollContainer height={height}>\n                <div className=\"track\" ref={trackRef} style={{padding: '20px 0'}}>\n                    {\n                        db.map(item => {\n                            const uniqueDates = [...new Set(item.chatHistory.map(message => moment(message.date).format('DD.MM.YYYY')))];\n                            return (\n                                <Tab.Pane eventKey={item.id} key={item.id}>\n                                    {\n                                        uniqueDates.map(date => {\n                                            return (\n                                                <div className=\"group\" key={`${item.id}-${date}`}>\n                                                    <GroupSeparator\n                                                        text={date === moment().format('DD.MM.YYYY') ? 'Today' : date}/>\n                                                    {\n                                                        item.chatHistory.filter(message => moment(message.date).format('DD.MM.YYYY') === date)\n                                                            .map((message, i) => {\n                                                                return (\n                                                                    <Message\n                                                                        key={message.id}\n                                                                        data={message}\n                                                                        senderName={`${item.firstName} ${item.lastName}`}/>\n                                                                )\n                                                            })\n                                                    }\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                    {\n                                        item.isTyping &&\n                                        <Animation>\n                                            <Lottie animationData={typing}/>\n                                        </Animation>\n                                    }\n                                </Tab.Pane>\n                            )\n                        })\n                    }\n                </div>\n            </ScrollContainer>\n            <Input db={variant} id={user} elRef={footerRef}/>\n        </Container>\n    )\n}\n\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}