{"ast":null,"code":"var _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/components/Todos/Todo/index.jsx\",\n  _s = $RefreshSig$();\n// styled components\nimport { BasicBadge } from '@ui/Badge/style';\nimport { ListItemContainer, Content, Main, Label, Secondary } from './list';\nimport { PlannerItemContainer, Wrapper, TimestampWrapper } from '@components/Todos/Todo/planner';\n\n// components\nimport Timestamp from '@ui/Timestamp';\nimport Checkbox from '@ui/Checkbox';\nimport Collapse from '@mui/material/Collapse';\nimport { Badge } from '@ui/Badge/style';\n\n// utils\nimport { toggleComplete } from '@store/features/todos';\nimport { tasksColors } from '@constants/colors';\nimport moment from 'moment';\n\n// hooks\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = ({\n  data,\n  variant\n}) => {\n  _s();\n  const {\n    id,\n    name,\n    timestamp,\n    complete,\n    label,\n    expanded\n  } = data;\n  const dispatch = useDispatch();\n  const color = tasksColors.find(({\n    cat\n  }) => cat === label).color;\n  const TodoLayout = () => {\n    switch (variant) {\n      default:\n      case 'list':\n        return /*#__PURE__*/_jsxDEV(ListItemContainer, {\n          color: color,\n          className: \"list-item\",\n          tabIndex: 0,\n          children: /*#__PURE__*/_jsxDEV(Content, {\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              variant: \"square\",\n              id: `task-${id}`,\n              checked: complete,\n              handler: () => dispatch(toggleComplete({\n                id\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Main, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                defaultValue: name,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Timestamp, {\n                date: moment(timestamp).toDate(),\n                time: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Secondary, {\n              children: /*#__PURE__*/_jsxDEV(Label, {\n                className: \"category\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text\",\n                  children: label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(BasicBadge, {\n                  color: color\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this);\n      case 'planner':\n        return /*#__PURE__*/_jsxDEV(PlannerItemContainer, {\n          className: \"list-item\",\n          tabIndex: 0,\n          children: [/*#__PURE__*/_jsxDEV(Wrapper, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TimestampWrapper, {\n              children: [/*#__PURE__*/_jsxDEV(Badge, {\n                color: color\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Timestamp, {\n                date: moment(timestamp).toDate(),\n                time: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            variant: \"basic\",\n            id: `task-${id}`,\n            checked: complete,\n            handler: () => dispatch(toggleComplete({\n              id\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Collapse, {\n    in: expanded,\n    timeout: 300,\n    children: /*#__PURE__*/_jsxDEV(TodoLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(Todo, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["BasicBadge","ListItemContainer","Content","Main","Label","Secondary","PlannerItemContainer","Wrapper","TimestampWrapper","Timestamp","Checkbox","Collapse","Badge","toggleComplete","tasksColors","moment","useDispatch","jsxDEV","_jsxDEV","Todo","data","variant","_s","id","name","timestamp","complete","label","expanded","dispatch","color","find","cat","TodoLayout","className","tabIndex","children","checked","handler","fileName","_jsxFileName","lineNumber","columnNumber","type","defaultValue","readOnly","date","toDate","time","in","timeout","_c","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/components/Todos/Todo/index.jsx"],"sourcesContent":["// styled components\nimport {BasicBadge} from '@ui/Badge/style';\nimport {ListItemContainer, Content, Main, Label, Secondary} from './list';\nimport {PlannerItemContainer, Wrapper, TimestampWrapper} from '@components/Todos/Todo/planner';\n\n// components\nimport Timestamp from '@ui/Timestamp';\nimport Checkbox from '@ui/Checkbox';\nimport Collapse from '@mui/material/Collapse';\nimport {Badge} from '@ui/Badge/style';\n\n// utils\nimport {toggleComplete} from '@store/features/todos';\nimport {tasksColors} from '@constants/colors';\nimport moment from 'moment';\n\n// hooks\nimport {useDispatch} from 'react-redux';\n\nconst Todo = ({data, variant}) => {\n    const {id, name, timestamp, complete, label, expanded} = data;\n    const dispatch = useDispatch();\n    const color = tasksColors.find(({cat}) => cat === label).color;\n\n    const TodoLayout = () => {\n        switch (variant) {\n            default:\n            case 'list':\n                return (\n                    <ListItemContainer color={color} className=\"list-item\" tabIndex={0}>\n                        <Content>\n                            <Checkbox variant=\"square\" id={`task-${id}`} checked={complete}\n                                      handler={() => dispatch(toggleComplete({id}))}/>\n                            <Main>\n                                <input type=\"text\" defaultValue={name} readOnly={true} />\n                                <Timestamp date={moment(timestamp).toDate()} time={true}/>\n                            </Main>\n                            <Secondary>\n                                <Label className=\"category\">\n                                    <span className=\"text\">{label}</span>\n                                    <BasicBadge color={color}/>\n                                </Label>\n                            </Secondary>\n                        </Content>\n                    </ListItemContainer>\n                )\n            case 'planner':\n                return (\n                    <PlannerItemContainer className=\"list-item\" tabIndex={0}>\n                        <Wrapper>\n                            <span>{name}</span>\n                            <TimestampWrapper>\n                                <Badge color={color}/>\n                                <Timestamp date={moment(timestamp).toDate()} time={true}/>\n                            </TimestampWrapper>\n                        </Wrapper>\n                        <Checkbox variant=\"basic\" id={`task-${id}`} checked={complete}\n                                  handler={() => dispatch(toggleComplete({id}))}/>\n                    </PlannerItemContainer>\n                )\n        }\n    }\n\n    return (\n        <Collapse in={expanded} timeout={300}>\n            <TodoLayout/>\n        </Collapse>\n    )\n}\n\nexport default Todo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}