{"ast":null,"code":"import _styled from \"styled-components\"; // styling\nvar _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/widgets/DoctorOverallAppointment/index.jsx\",\n  _s = $RefreshSig$();\nimport { colors } from '@styles/vars';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetNav from '@components/Widget/WidgetNav';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport LabeledProgress from '@ui/LabeledProgress';\nimport ScrollContainer from 'react-indiana-drag-scroll';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport { useRef, useEffect } from 'react';\nimport { useTheme } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = _styled.ul.withConfig({\n  displayName: \"DoctorOverallAppointment__List\",\n  componentId: \"sc-1h7s6dl-0\"\n})([\"display:flex;justify-content:space-between;gap:12px;overflow-x:scroll;padding:0 24px;user-select:none;\"]);\n_c = List;\nconst DoctorOverallAppointment = () => {\n  _s();\n  const {\n    theme\n  } = useTheme();\n  const listRef = useRef(null);\n  const drawLabels = () => {\n    const labels = [];\n    for (let i = 0; i < data[index].length; i++) {\n      labels.push(`${8 + i}:00`);\n    }\n    return labels;\n  };\n  const data = [[37, 12, 58, 20, 0, 10, 15, 44, 19, 68, 50], [20, 55, 44, 31, 75, 0, 0, 59, 84, 20, 10], [80, 50, 30, 60, 40, 20, 50, 65, 85, 0, 40]];\n  const {\n    index,\n    navigate\n  } = useArrayNav(data);\n  useEffect(() => {\n    if (listRef.current) {\n      listRef.current.scrollTo(0, 0);\n    }\n  }, [index]);\n  return /*#__PURE__*/_jsxDEV(Widget, {\n    name: \"DoctorOverallAppointment\",\n    shadow: true,\n    children: [/*#__PURE__*/_jsxDEV(WidgetNav, {\n      title: \"Overall Appointment\",\n      style: {\n        paddingBottom: 17\n      },\n      handler: navigate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WidgetBody, {\n      sidePadding: true,\n      style: {\n        paddingBottom: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        innerRef: listRef,\n        as: ScrollContainer,\n        activationDistance: 5,\n        component: \"ul\",\n        children: data[index].map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(LabeledProgress, {\n            label: drawLabels()[i],\n            value: item,\n            color: theme === 'light' ? colors.azure : colors.blue\n          }, drawLabels()[i], false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(DoctorOverallAppointment, \"E70jGgGPpvp/U8XUIfb1F9JOdsM=\", false, function () {\n  return [useTheme, useArrayNav];\n});\n_c2 = DoctorOverallAppointment;\nexport default DoctorOverallAppointment;\nvar _c, _c2;\n$RefreshReg$(_c, \"List\");\n$RefreshReg$(_c2, \"DoctorOverallAppointment\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","colors","Widget","WidgetNav","WidgetBody","LabeledProgress","ScrollContainer","useArrayNav","useRef","useEffect","useTheme","jsxDEV","_jsxDEV","List","styled","ul","withConfig","displayName","componentId","_c","DoctorOverallAppointment","theme","listRef","drawLabels","labels","i","data","index","length","push","navigate","current","scrollTo","name","shadow","children","title","style","paddingBottom","handler","fileName","lineNumber","columnNumber","sidePadding","innerRef","as","activationDistance","component","map","item","label","value","color","azure","blue","_c2","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/widgets/DoctorOverallAppointment/index.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport {colors} from '@styles/vars';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetNav from '@components/Widget/WidgetNav';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport LabeledProgress from '@ui/LabeledProgress';\nimport ScrollContainer from 'react-indiana-drag-scroll';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport {useRef, useEffect} from 'react';\nimport {useTheme} from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  gap: 12px;\n  overflow-x: scroll;\n  padding: 0 24px;\n  user-select: none;\n`\n\nconst DoctorOverallAppointment = () => {\n    const {theme} = useTheme();\n    const listRef = useRef(null);\n\n    const drawLabels = () => {\n        const labels = [];\n        for (let i = 0; i < data[index].length; i++) {\n            labels.push(`${8 + i}:00`);\n        }\n        return labels;\n    }\n\n    const data = [\n        [37, 12, 58, 20, 0, 10, 15, 44, 19, 68, 50],\n        [20, 55, 44, 31, 75, 0, 0, 59, 84, 20, 10],\n        [80, 50, 30, 60, 40, 20, 50, 65, 85, 0, 40]\n    ]\n\n    const {index, navigate} = useArrayNav(data);\n\n    useEffect(() => {\n        if (listRef.current) {\n            listRef.current.scrollTo(0, 0);\n        }\n    }, [index])\n\n    return (\n        <Widget name=\"DoctorOverallAppointment\" shadow={true}>\n            <WidgetNav title=\"Overall Appointment\" style={{paddingBottom: 17}} handler={navigate}/>\n            <WidgetBody sidePadding={true} style={{paddingBottom: 20}}>\n                <List innerRef={listRef} as={ScrollContainer} activationDistance={5} component=\"ul\">\n                    {\n                        data[index].map((item, i) => {\n                            return (\n                                <LabeledProgress\n                                    key={drawLabels()[i]}\n                                    label={drawLabels()[i]}\n                                    value={item}\n                                    color={theme === 'light' ? colors.azure : colors.blue}/>\n                            )\n                        })\n                    }\n                </List>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default DoctorOverallAppointment;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}