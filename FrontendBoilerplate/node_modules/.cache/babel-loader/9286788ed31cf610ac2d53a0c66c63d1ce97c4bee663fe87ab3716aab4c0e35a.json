{"ast":null,"code":"import moment from 'moment';\nexport const getYearDaysArray = () => {\n  const year = moment().year();\n  const days = [];\n  const totalDays = moment().year(moment().year()).endOf('year').diff(moment().year(moment().year()).startOf('year'), 'days') + 1;\n  for (let i = 1; i <= totalDays; i++) {\n    let date = moment().year(year).dayOfYear(i);\n    days.push({\n      date: date,\n      long: date.format('dddd, MMMM DD'),\n      short: date.format('DD/MM/YYYY')\n    });\n  }\n  return days;\n};\nexport const getMonthArray = () => {\n  const year = moment().year();\n  const months = [];\n  for (let i = 1; i <= 12; i++) {\n    let month = moment().year(year).month(i - 1);\n    months.push({\n      month: month,\n      formatted: month.format('MMMM, YYYY')\n    });\n  }\n  return months;\n};\nexport const getWeekArray = () => {\n  const year = moment().year();\n  const weeks = [];\n  const totalWeeks = moment().year(moment().year()).endOf('year').diff(moment().year(moment().year()).startOf('year'), 'weeks') + 1;\n  for (let i = 1; i <= totalWeeks; i++) {\n    let week = moment().year(year).week(i);\n    weeks.push({\n      week: i,\n      startShort: week.startOf('week').format('MMM, DD'),\n      endShort: week.endOf('week').format('MMM, DD'),\n      startLong: week.startOf('week').format('MMMM, DD'),\n      endLong: week.endOf('week').format('MMMM, DD')\n    });\n  }\n  return weeks;\n};","map":{"version":3,"names":["moment","getYearDaysArray","year","days","totalDays","endOf","diff","startOf","i","date","dayOfYear","push","long","format","short","getMonthArray","months","month","formatted","getWeekArray","weeks","totalWeeks","week","startShort","endShort","startLong","endLong"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/utils/dates.js"],"sourcesContent":["import moment from 'moment';\n\nexport const getYearDaysArray = () => {\n    const year = moment().year();\n    const days = [];\n    const totalDays = moment().year(moment().year()).endOf('year').diff(moment().year(moment().year()).startOf('year'), 'days') + 1;\n    for (let i = 1; i <= totalDays; i++) {\n        let date = moment().year(year).dayOfYear(i);\n        days.push({\n            date: date,\n            long: date.format('dddd, MMMM DD'),\n            short: date.format('DD/MM/YYYY'),\n        });\n    }\n    return days;\n}\n\nexport const getMonthArray = () => {\n    const year = moment().year();\n    const months = [];\n    for (let i = 1; i <= 12; i++) {\n        let month = moment().year(year).month(i - 1);\n        months.push({\n            month: month,\n            formatted: month.format('MMMM, YYYY')\n        });\n    }\n    return months;\n};\n\nexport const getWeekArray = () => {\n    const year = moment().year();\n    const weeks = [];\n    const totalWeeks = moment().year(moment().year()).endOf('year').diff(moment().year(moment().year()).startOf('year'), 'weeks') + 1;\n    for (let i = 1; i <= totalWeeks; i++) {\n        let week = moment().year(year).week(i);\n\n        weeks.push({\n            week: i,\n            startShort: week.startOf('week').format('MMM, DD'),\n            endShort: week.endOf('week').format('MMM, DD'),\n            startLong: week.startOf('week').format('MMMM, DD'),\n            endLong: week.endOf('week').format('MMMM, DD'),\n        });\n    }\n    return weeks;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}