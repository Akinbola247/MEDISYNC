{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/widgets/BloodTest/index.jsx\",\n  _s = $RefreshSig$();\n// styling\nimport { light, dark, textSizes, fonts, colors, flex } from '@styles/vars';\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport ReactSpeedometer from 'react-d3-speedometer';\n\n// hooks\nimport { useTheme } from 'styled-components';\nimport useWindowSize from '@hooks/useWindowSize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = _styled.div.withConfig({\n  displayName: \"BloodTest__Wrapper\",\n  componentId: \"sc-jv5ldd-0\"\n})([\"display:flex;height:100%;\", \";.speedometer{width:100%;text{font-weight:400 !important;font-family:\", \";&.current-value{display:none;}}}\"], flex.center, fonts.accent);\n_c = Wrapper;\nconst BloodTest = () => {\n  _s();\n  const {\n    theme\n  } = useTheme();\n  const {\n    width\n  } = useWindowSize();\n  const sizes = () => {\n    switch (true) {\n      case width < 414:\n        return {\n          width: 232,\n          height: 120\n        };\n      case width >= 414 && width < 1800:\n        return {\n          width: 300,\n          height: 160\n        };\n      default:\n      case width >= 1800:\n        return {\n          width: 400,\n          height: 220\n        };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Widget, {\n    name: \"BloodTest\",\n    children: [/*#__PURE__*/_jsxDEV(WidgetHeader, {\n      title: \"Blood test speed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WidgetBody, {\n      style: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: /*#__PURE__*/_jsxDEV(ReactSpeedometer, {\n          value: 251,\n          maxValue: 1000,\n          needleColor: light.text,\n          needleTransitionDuration: 2000,\n          needleHeightRatio: 0.8,\n          segments: 80,\n          startColor: colors.green,\n          endColor: colors.red,\n          ringWidth: 60,\n          textColor: theme === 'light' ? light.text : dark.text,\n          labelFontSize: textSizes['10'],\n          maxSegmentLabels: 10,\n          valueFormat: '~s',\n          forceRender: true,\n          width: sizes().width,\n          height: sizes().height\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(BloodTest, \"ac2KC/pGNlwMrtFBzbhHY2FLDmQ=\", false, function () {\n  return [useTheme, useWindowSize];\n});\n_c2 = BloodTest;\nexport default BloodTest;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"BloodTest\");","map":{"version":3,"names":["light","dark","textSizes","fonts","colors","flex","Widget","WidgetHeader","WidgetBody","ReactSpeedometer","useTheme","useWindowSize","jsxDEV","_jsxDEV","Wrapper","styled","div","withConfig","displayName","componentId","center","accent","_c","BloodTest","_s","theme","width","sizes","height","name","children","title","fileName","_jsxFileName","lineNumber","columnNumber","style","flexGrow","value","maxValue","needleColor","text","needleTransitionDuration","needleHeightRatio","segments","startColor","green","endColor","red","ringWidth","textColor","labelFontSize","maxSegmentLabels","valueFormat","forceRender","_c2","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/widgets/BloodTest/index.jsx"],"sourcesContent":["// styling\nimport {light, dark, textSizes, fonts, colors, flex} from '@styles/vars';\nimport styled from 'styled-components/macro';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport ReactSpeedometer from 'react-d3-speedometer';\n\n// hooks\nimport {useTheme} from 'styled-components';\nimport useWindowSize from '@hooks/useWindowSize';\n\nconst Wrapper = styled.div`\n  display: flex;\n  height: 100%;\n  ${flex.center};\n\n  .speedometer {\n    width: 100%;\n\n    text {\n      font-weight: 400 !important;\n      font-family: ${fonts.accent};\n\n      &.current-value {\n        display: none;\n      }\n    }\n  }\n`;\n\nconst BloodTest = () => {\n    const {theme} = useTheme();\n    const {width} = useWindowSize();\n\n    const sizes = () => {\n        switch (true) {\n            case width < 414:\n                return { width: 232, height: 120 };\n            case width >= 414 && width < 1800:\n                return { width: 300, height: 160 };\n            default:\n                case width >= 1800:\n                return { width: 400, height: 220 };\n        }\n    }\n\n    return (\n        <Widget name=\"BloodTest\">\n            <WidgetHeader title=\"Blood test speed\"/>\n            <WidgetBody style={{flexGrow: 1}}>\n                <Wrapper>\n                    <ReactSpeedometer\n                        value={251}\n                        maxValue={1000}\n                        needleColor={light.text}\n                        needleTransitionDuration={2000}\n                        needleHeightRatio={0.8}\n                        segments={80}\n                        startColor={colors.green}\n                        endColor={colors.red}\n                        ringWidth={60}\n                        textColor={theme === 'light' ? light.text : dark.text}\n                        labelFontSize={textSizes['10']}\n                        maxSegmentLabels={10}\n                        valueFormat={'~s'}\n                        forceRender={true}\n                        width={sizes().width}\n                        height={sizes().height}\n                    />\n                </Wrapper>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default BloodTest;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}