{"ast":null,"code":"import _styled from \"styled-components\"; // styling\nvar _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/widgets/DiagnosesDonut/ChartLabel/index.jsx\";\nimport { flex, textSizes } from '@styles/vars';\nimport { numFormatter } from '@utils/numbers';\nimport PropTypes from 'prop-types';\nimport CustomTooltip from '@ui/CustomTooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Label = _styled.div.withConfig({\n  displayName: \"ChartLabel__Label\",\n  componentId: \"sc-qjb3rw-0\"\n})([\"\", \";\", \";position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);font-size:\", \";user-select:none;span{position:absolute;opacity:0;transform:scale(0);will-change:transform;transition:transform .5s ease-in-out,opacity .5s ease-in-out;visibility:hidden;&.visible{position:relative;opacity:1;transform:scale(1);visibility:visible;}}\"], flex.col, flex.center, textSizes['14']);\n_c = Label;\nconst ChartLabel = ({\n  periods,\n  values,\n  index\n}) => {\n  return /*#__PURE__*/_jsxDEV(CustomTooltip, {\n    title: `Per ${periods[index]}`,\n    placement: \"top\",\n    children: /*#__PURE__*/_jsxDEV(Label, {\n      children: [values.map((value, i) => {\n        const isVisible = i === index;\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: isVisible ? 'visible h1' : 'h1',\n          children: numFormatter(value)\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this);\n      }), \" patients\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_c2 = ChartLabel;\nChartLabel.propTypes = {\n  values: PropTypes.array.isRequired,\n  index: PropTypes.number.isRequired\n};\nexport default ChartLabel;\nvar _c, _c2;\n$RefreshReg$(_c, \"Label\");\n$RefreshReg$(_c2, \"ChartLabel\");","map":{"version":3,"names":["_jsxFileName","flex","textSizes","numFormatter","PropTypes","CustomTooltip","jsxDEV","_jsxDEV","Label","styled","div","withConfig","displayName","componentId","col","center","_c","ChartLabel","periods","values","index","title","placement","children","map","value","i","isVisible","className","fileName","lineNumber","columnNumber","_c2","propTypes","array","isRequired","number","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/widgets/DiagnosesDonut/ChartLabel/index.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport {flex, textSizes} from '@styles/vars';\nimport {numFormatter} from '@utils/numbers';\nimport PropTypes from 'prop-types';\nimport CustomTooltip from '@ui/CustomTooltip';\n\nconst Label = styled.div`\n  ${flex.col};\n  ${flex.center};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: ${textSizes['14']};\n  user-select: none;\n\n  span {\n    position: absolute;\n    opacity: 0;\n    transform: scale(0);\n    will-change: transform;\n    transition: transform .5s ease-in-out, opacity .5s ease-in-out;\n    visibility: hidden;\n\n    &.visible {\n      position: relative;\n      opacity: 1;\n      transform: scale(1);\n      visibility: visible;\n    }\n  }\n`;\n\nconst ChartLabel = ({periods, values, index}) => {\n    return (\n        <CustomTooltip title={`Per ${periods[index]}`} placement=\"top\">\n            <Label>\n                {\n                    values.map((value, i) => {\n                        const isVisible = i === index;\n                        return (\n                            <span key={value} className={isVisible ? 'visible h1' : 'h1'}>\n                                {numFormatter(value)}\n                            </span>\n                        )\n                    })\n                } patients\n            </Label>\n        </CustomTooltip>\n    )\n}\n\nChartLabel.propTypes = {\n    values: PropTypes.array.isRequired,\n    index: PropTypes.number.isRequired\n}\n\nexport default ChartLabel;"],"mappings":"yCAAA;AAAA,IAAAA,YAAA;AAEA,SAAQC,IAAI,EAAEC,SAAS,QAAO,cAAc;AAC5C,SAAQC,YAAY,QAAO,gBAAgB;AAC3C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,aAAa,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,KAAK,GAAGC,OAAM,CAACC,GAAG,CAAAC,UAAA;EAAAC,WAAA;EAAAC,WAAA;AAAA,4VACpBZ,IAAI,CAACa,GAAG,EACRb,IAAI,CAACc,MAAM,EAKAb,SAAS,CAAC,IAAI,CAAC,CAkB7B;AAACc,EAAA,GAzBIR,KAAK;AA2BX,MAAMS,UAAU,GAAGA,CAAC;EAACC,OAAO;EAAEC,MAAM;EAAEC;AAAK,CAAC,KAAK;EAC7C,oBACIb,OAAA,CAACF,aAAa;IAACgB,KAAK,EAAG,OAAMH,OAAO,CAACE,KAAK,CAAE,EAAE;IAACE,SAAS,EAAC,KAAK;IAAAC,QAAA,eAC1DhB,OAAA,CAACC,KAAK;MAAAe,QAAA,GAEEJ,MAAM,CAACK,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;QACrB,MAAMC,SAAS,GAAGD,CAAC,KAAKN,KAAK;QAC7B,oBACIb,OAAA;UAAkBqB,SAAS,EAAED,SAAS,GAAG,YAAY,GAAG,IAAK;UAAAJ,QAAA,EACxDpB,YAAY,CAACsB,KAAK;QAAC,GADbA,KAAK;UAAAI,QAAA,EAAA7B,YAAA;UAAA8B,UAAA;UAAAC,YAAA;QAAA,OAEV,CAAC;MAEf,CAAC,CAAC,EACL,WACL;IAAA;MAAAF,QAAA,EAAA7B,YAAA;MAAA8B,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAF,QAAA,EAAA7B,YAAA;IAAA8B,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAExB,CAAC;AAAAC,GAAA,GAjBKf,UAAU;AAmBhBA,UAAU,CAACgB,SAAS,GAAG;EACnBd,MAAM,EAAEf,SAAS,CAAC8B,KAAK,CAACC,UAAU;EAClCf,KAAK,EAAEhB,SAAS,CAACgC,MAAM,CAACD;AAC5B,CAAC;AAED,eAAelB,UAAU;AAAC,IAAAD,EAAA,EAAAgB,GAAA;AAAAK,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAL,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}