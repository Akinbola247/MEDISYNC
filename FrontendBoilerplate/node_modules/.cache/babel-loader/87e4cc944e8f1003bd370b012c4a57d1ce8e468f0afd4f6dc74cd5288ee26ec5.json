{"ast":null,"code":"import _styled from \"styled-components\"; // styling\nvar _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/components/Waveform/index.jsx\",\n  _s = $RefreshSig$();\nimport { colors, light, fonts, textSizes } from '@styles/vars';\n\n// components\nimport WaveSurfer from 'wavesurfer.js';\nimport ShapeButton from '@ui/ShapeButton';\n\n// hooks\nimport { useState, useEffect } from 'react';\nimport { useTheme } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = _styled.div.withConfig({\n  displayName: \"Waveform__Container\",\n  componentId: \"sc-sjh3u2-0\"\n})([\"display:flex;align-items:center;flex-grow:1;height:40px;gap:10px;.wave{flex-grow:1;min-width:50px;max-width:200px;}.duration{font-family:\", \";font-size:\", \";min-width:70px;}\"], fonts.accent, textSizes['10']);\n_c = Container;\nconst Waveform = props => {\n  _s();\n  const [state, setState] = useState({\n    playing: false,\n    progress: 0,\n    duration: 0,\n    src: props.src,\n    id: props.id\n  });\n  const {\n    theme\n  } = useTheme();\n  const [wave, setWave] = useState(null);\n  function init() {\n    const track = document.querySelector(`#track_${state.id}`);\n    if (track) {\n      const waveform = WaveSurfer.create({\n        barWidth: 1,\n        cursorWidth: 1,\n        container: `#waveform_${props.id}`,\n        backend: 'WebAudio',\n        height: 33,\n        barGap: 2,\n        barRadius: 0.5,\n        progressColor: colors.blue,\n        responsive: true,\n        waveColor: theme === 'dark' ? light.text : '#87BFFF',\n        cursorColor: 'transparent'\n      });\n      setWave(waveform);\n      waveform.load(track);\n      waveform.on('ready', () => {\n        setState({\n          ...state,\n          duration: waveform.getDuration()\n        });\n      });\n      waveform.on('audioprocess', () => {\n        setState({\n          ...state,\n          progress: waveform.getCurrentTime()\n        });\n      });\n      waveform.on('finish', () => {\n        setState({\n          ...state,\n          playing: false,\n          progress: 0\n        });\n        waveform.seekTo(0);\n      });\n    }\n  }\n  useEffect(() => {\n    init();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (wave) {\n      wave.setWaveColor(theme === 'dark' ? light.text : '#87BFFF');\n    }\n  }, [theme, wave]);\n  const handlePlay = () => {\n    setState({\n      ...state,\n      playing: !state.playing\n    });\n    wave.playPause();\n  };\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time - minutes * 60);\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"audio\",\n    children: [/*#__PURE__*/_jsxDEV(ShapeButton, {\n      shape: \"round\",\n      icon: !state.playing ? 'play' : 'pause',\n      label: !state.playing ? 'Play voice message' : 'Pause voice message',\n      handler: handlePlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wave\",\n      id: `waveform_${state.id}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      id: `track_${state.id}`,\n      src: props.src\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"duration\",\n      children: [formatTime(state.progress), \" / \", formatTime(state.duration)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(Waveform, \"kxKnyVoqPdkUDayrNwk37ak8GpE=\", false, function () {\n  return [useTheme];\n});\n_c2 = Waveform;\nexport default Waveform;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Waveform\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","colors","light","fonts","textSizes","WaveSurfer","ShapeButton","useState","useEffect","useTheme","jsxDEV","_jsxDEV","Container","styled","div","withConfig","displayName","componentId","accent","_c","Waveform","props","state","setState","playing","progress","duration","src","id","theme","wave","setWave","init","track","document","querySelector","waveform","create","barWidth","cursorWidth","container","backend","height","barGap","barRadius","progressColor","blue","responsive","waveColor","text","cursorColor","load","on","getDuration","getCurrentTime","seekTo","setWaveColor","handlePlay","playPause","formatTime","time","minutes","Math","floor","seconds","className","children","shape","icon","label","handler","fileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/components/Waveform/index.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport {colors, light, fonts, textSizes} from '@styles/vars';\n\n// components\nimport WaveSurfer from 'wavesurfer.js';\nimport ShapeButton from '@ui/ShapeButton';\n\n// hooks\nimport {useState, useEffect} from 'react';\nimport {useTheme} from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  flex-grow: 1;\n  height: 40px;\n  gap: 10px;\n\n  .wave {\n    flex-grow: 1;\n    min-width: 50px;\n    max-width: 200px;\n  }\n\n  .duration {\n    font-family: ${fonts.accent};\n    font-size: ${textSizes['10']};\n    min-width: 70px;\n  }\n`;\n\nconst Waveform = (props) => {\n    const [state, setState] = useState({\n        playing: false,\n        progress: 0,\n        duration: 0,\n        src: props.src,\n        id: props.id\n    });\n    const {theme} = useTheme();\n\n    const [wave, setWave] = useState(null);\n\n    function init() {\n        const track = document.querySelector(`#track_${state.id}`);\n        if (track) {\n            const waveform = WaveSurfer.create({\n                barWidth: 1,\n                cursorWidth: 1,\n                container: `#waveform_${props.id}`,\n                backend: 'WebAudio',\n                height: 33,\n                barGap: 2,\n                barRadius: 0.5,\n                progressColor: colors.blue,\n                responsive: true,\n                waveColor: theme === 'dark' ? light.text : '#87BFFF',\n                cursorColor: 'transparent',\n            });\n            setWave(waveform);\n            waveform.load(track);\n            waveform.on('ready', () => {\n                setState({...state, duration: waveform.getDuration()});\n            });\n            waveform.on('audioprocess', () => {\n                setState({...state, progress: waveform.getCurrentTime()});\n            })\n            waveform.on('finish', () => {\n                setState({...state, playing: false, progress: 0});\n                waveform.seekTo(0);\n            })\n        }\n    }\n\n    useEffect(() => {\n        init();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if (wave) {\n            wave.setWaveColor(theme === 'dark' ? light.text : '#87BFFF');\n        }\n    }, [theme, wave]);\n\n    const handlePlay = () => {\n        setState({...state, playing: !state.playing});\n        wave.playPause();\n    };\n\n    const formatTime = (time) => {\n        const minutes = Math.floor(time / 60);\n        const seconds = Math.floor(time - minutes * 60);\n        return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n    }\n\n    return (\n        <Container className=\"audio\">\n            <ShapeButton shape=\"round\" icon={!state.playing ? 'play' : 'pause'}\n                         label={!state.playing ? 'Play voice message' : 'Pause voice message'}\n                         handler={handlePlay}\n            />\n            <div className=\"wave\" id={`waveform_${state.id}`}/>\n            <audio id={`track_${state.id}`} src={props.src}/>\n            <div className=\"duration\">\n                {formatTime(state.progress)} / {formatTime(state.duration)}\n            </div>\n        </Container>\n    );\n}\n\nexport default Waveform;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}