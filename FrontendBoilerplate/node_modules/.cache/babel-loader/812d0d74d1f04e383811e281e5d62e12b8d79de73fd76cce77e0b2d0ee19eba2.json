{"ast":null,"code":"import _styled from \"styled-components\"; // styling\nvar _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/components/Messenger/Input/index.jsx\",\n  _s = $RefreshSig$();\nimport { flex, textSizes, breakpoints } from '@styles/vars';\n\n// styled components\nimport { Footer } from '@components/Messenger/style';\nimport ShapeButton from '@ui/ShapeButton';\n\n// hooks\nimport { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\n// utils\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { nanoid } from 'nanoid';\n\n// actions\nimport { addMessage } from '@store/features/messenger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputFooter = _styled(Footer).withConfig({\n  displayName: \"Input__InputFooter\",\n  componentId: \"sc-z42vhf-0\"\n})([\"padding:15px 24px 20px;form{display:flex;\", \";gap:8px;input{height:40px;max-width:calc(100% - 48px);&::placeholder{font-size:\", \";;}}\", \"{input::placeholder{font-size:\", \";}}}\"], flex.between, textSizes['14'], breakpoints.tablet, textSizes['18']);\n_c = InputFooter;\nconst Input = ({\n  db,\n  id,\n  elRef\n}) => {\n  _s();\n  const inputRef = useRef(null);\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const message = {\n      sender: 'current',\n      message: inputRef.current.value,\n      date: moment().valueOf(),\n      read: false,\n      id: nanoid()\n    };\n    if (inputRef.current.value !== '') {\n      dispatch(addMessage({\n        db,\n        id,\n        message\n      }));\n      inputRef.current.value = '';\n      inputRef.current.blur();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(InputFooter, {\n    ref: elRef,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        spellCheck: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ShapeButton, {\n        shape: \"round\",\n        icon: \"paper-plane\",\n        label: \"Send\",\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(Input, \"pHkKEFYt/w2H4/ZjFh2+Aly1p8Y=\", false, function () {\n  return [useDispatch];\n});\n_c2 = Input;\nInput.propTypes = {\n  db: PropTypes.oneOf(['doctor', 'patient']).isRequired,\n  id: PropTypes.string.isRequired\n};\nexport default Input;\nvar _c, _c2;\n$RefreshReg$(_c, \"InputFooter\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","flex","textSizes","breakpoints","Footer","ShapeButton","useRef","useDispatch","PropTypes","moment","nanoid","addMessage","jsxDEV","_jsxDEV","InputFooter","styled","withConfig","displayName","componentId","between","tablet","_c","Input","db","id","elRef","inputRef","dispatch","handleSubmit","e","preventDefault","message","sender","current","value","date","valueOf","read","blur","ref","children","onSubmit","type","placeholder","spellCheck","fileName","lineNumber","columnNumber","shape","icon","label","_c2","propTypes","oneOf","isRequired","string","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/components/Messenger/Input/index.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport {flex, textSizes, breakpoints} from '@styles/vars';\n\n// styled components\nimport {Footer} from '@components/Messenger/style';\nimport ShapeButton from '@ui/ShapeButton';\n\n// hooks\nimport {useRef} from 'react';\nimport {useDispatch} from 'react-redux';\n\n// utils\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport {nanoid} from 'nanoid';\n\n// actions\nimport {addMessage} from '@store/features/messenger';\n\nconst InputFooter = styled(Footer)`\n  padding: 15px 24px 20px;\n  form {\n    display: flex;\n    ${flex.between};\n    gap: 8px;\n\n    input {\n      height: 40px;\n      max-width: calc(100% - 48px);\n\n      &::placeholder {\n        font-size: ${textSizes['14']};;\n      }\n    }\n    \n    ${breakpoints.tablet} {\n        input::placeholder {\n            font-size: ${textSizes['18']};\n        }\n    }\n  }\n`;\n\nconst Input = ({db, id, elRef}) => {\n    const inputRef = useRef(null);\n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const message = {\n            sender: 'current',\n            message: inputRef.current.value,\n            date: moment().valueOf(),\n            read: false,\n            id: nanoid(),\n        };\n\n        if (inputRef.current.value !== '') {\n            dispatch(addMessage({db, id, message}));\n            inputRef.current.value = '';\n            inputRef.current.blur();\n        }\n    }\n\n    return (\n        <InputFooter ref={elRef}>\n            <form onSubmit={handleSubmit}>\n                <input ref={inputRef} type=\"text\" placeholder=\"Type a message...\" spellCheck={true} />\n                <ShapeButton shape=\"round\" icon=\"paper-plane\" label=\"Send\" type=\"submit\"/>\n            </form>\n        </InputFooter>\n    )\n}\n\nInput.propTypes = {\n    db: PropTypes.oneOf(['doctor', 'patient']).isRequired,\n    id: PropTypes.string.isRequired\n}\n\nexport default Input;"],"mappings":"yCAAA;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEA,SAAQC,IAAI,EAAEC,SAAS,EAAEC,WAAW,QAAO,cAAc;;AAEzD;AACA,SAAQC,MAAM,QAAO,6BAA6B;AAClD,OAAOC,WAAW,MAAM,iBAAiB;;AAEzC;AACA,SAAQC,MAAM,QAAO,OAAO;AAC5B,SAAQC,WAAW,QAAO,aAAa;;AAEvC;AACA,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAAQC,MAAM,QAAO,QAAQ;;AAE7B;AACA,SAAQC,UAAU,QAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,WAAW,GAAGC,OAAM,CAACX,MAAM,CAAC,CAAAY,UAAA;EAAAC,WAAA;EAAAC,WAAA;AAAA,wLAI5BjB,IAAI,CAACkB,OAAO,EAQGjB,SAAS,CAAC,IAAI,CAAC,EAI9BC,WAAW,CAACiB,MAAM,EAEClB,SAAS,CAAC,IAAI,CAAC,CAIvC;AAACmB,EAAA,GAtBIP,WAAW;AAwBjB,MAAMQ,KAAK,GAAGA,CAAC;EAACC,EAAE;EAAEC,EAAE;EAAEC;AAAK,CAAC,KAAK;EAAA1B,EAAA;EAC/B,MAAM2B,QAAQ,GAAGpB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMqB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAE9B,MAAMqB,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,OAAO,GAAG;MACZC,MAAM,EAAE,SAAS;MACjBD,OAAO,EAAEL,QAAQ,CAACO,OAAO,CAACC,KAAK;MAC/BC,IAAI,EAAE1B,MAAM,CAAC,CAAC,CAAC2B,OAAO,CAAC,CAAC;MACxBC,IAAI,EAAE,KAAK;MACXb,EAAE,EAAEd,MAAM,CAAC;IACf,CAAC;IAED,IAAIgB,QAAQ,CAACO,OAAO,CAACC,KAAK,KAAK,EAAE,EAAE;MAC/BP,QAAQ,CAAChB,UAAU,CAAC;QAACY,EAAE;QAAEC,EAAE;QAAEO;MAAO,CAAC,CAAC,CAAC;MACvCL,QAAQ,CAACO,OAAO,CAACC,KAAK,GAAG,EAAE;MAC3BR,QAAQ,CAACO,OAAO,CAACK,IAAI,CAAC,CAAC;IAC3B;EACJ,CAAC;EAED,oBACIzB,OAAA,CAACC,WAAW;IAACyB,GAAG,EAAEd,KAAM;IAAAe,QAAA,eACpB3B,OAAA;MAAM4B,QAAQ,EAAEb,YAAa;MAAAY,QAAA,gBACzB3B,OAAA;QAAO0B,GAAG,EAAEb,QAAS;QAACgB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,mBAAmB;QAACC,UAAU,EAAE;MAAK;QAAAC,QAAA,EAAA/C,YAAA;QAAAgD,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtFlC,OAAA,CAACR,WAAW;QAAC2C,KAAK,EAAC,OAAO;QAACC,IAAI,EAAC,aAAa;QAACC,KAAK,EAAC,MAAM;QAACR,IAAI,EAAC;MAAQ;QAAAG,QAAA,EAAA/C,YAAA;QAAAgD,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAF,QAAA,EAAA/C,YAAA;MAAAgD,UAAA;MAAAC,YAAA;IAAA,OACxE;EAAC;IAAAF,QAAA,EAAA/C,YAAA;IAAAgD,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEtB,CAAC;AAAAhD,EAAA,CA9BKuB,KAAK;EAAA,QAEUf,WAAW;AAAA;AAAA4C,GAAA,GAF1B7B,KAAK;AAgCXA,KAAK,CAAC8B,SAAS,GAAG;EACd7B,EAAE,EAAEf,SAAS,CAAC6C,KAAK,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAACC,UAAU;EACrD9B,EAAE,EAAEhB,SAAS,CAAC+C,MAAM,CAACD;AACzB,CAAC;AAED,eAAehC,KAAK;AAAC,IAAAD,EAAA,EAAA8B,GAAA;AAAAK,YAAA,CAAAnC,EAAA;AAAAmC,YAAA,CAAAL,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}