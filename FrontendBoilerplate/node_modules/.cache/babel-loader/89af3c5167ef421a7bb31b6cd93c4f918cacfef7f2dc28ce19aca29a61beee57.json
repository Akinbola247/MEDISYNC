{"ast":null,"code":"var _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/widgets/PatientsGenderLineChart/index.jsx\",\n  _s = $RefreshSig$();\n// styling\nimport { colors, light, dark } from '@styles/vars';\n\n// styled components\nimport Labels from '@components/Chart/Labels';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport Navigator from '@ui/Navigator';\nimport CartesianChart from '@components/CartesianChart';\nimport LegendList from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport { useTheme } from 'styled-components';\nimport useWindowSize from '@hooks/useWindowSize';\n\n// utils\nimport moment from 'moment';\nimport { getMonthArray } from '@utils/dates';\n\n// data placeholder\nimport { y2019, y2020, y2021, y2022 } from '@db/gender';\nimport { rgba } from 'polished';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientsGenderLineChart = () => {\n  _s();\n  const isMobile = useWindowSize().width < 768;\n  const {\n    theme\n  } = useTheme();\n  const periods = ['2019', '2020', '2021', '2022'];\n  const {\n    index,\n    navigate\n  } = useArrayNav(periods);\n\n  // common line props\n  const common = {\n    type: \"monotone\",\n    strokeWidth: 3,\n    dot: false\n  };\n  const chartElems = [{\n    ...common,\n    dataKey: \"men\",\n    stroke: colors.azure,\n    activeDot: {\n      r: 4,\n      fill: colors.azure,\n      stroke: theme === 'light' ? light.widgetBg : dark.widgetBg,\n      strokeWidth: 2\n    },\n    style: {\n      filter: `drop-shadow(0 0 6px ${rgba(colors.azure, .5)})`\n    }\n  }, {\n    ...common,\n    dataKey: \"women\",\n    stroke: colors.peach,\n    activeDot: {\n      r: 4,\n      fill: colors.peach,\n      stroke: theme === 'light' ? light.widgetBg : dark.widgetBg,\n      strokeWidth: 2\n    },\n    style: {\n      filter: `drop-shadow(0 0 6px ${rgba(colors.peach, .5)})`\n    }\n  }];\n  const currentData = () => {\n    switch (periods[index]) {\n      case '2019':\n        return y2019;\n      case '2020':\n        return y2020;\n      case '2021':\n        return y2021;\n      default:\n      case '2022':\n        return y2022;\n    }\n  };\n  const data = currentData();\n  return /*#__PURE__*/_jsxDEV(Widget, {\n    name: \"PatientsGenderLineChart\",\n    mobile: 400,\n    children: [/*#__PURE__*/_jsxDEV(WidgetHeader, {\n      title: \"Patients gender\",\n      flex: \"column\",\n      children: /*#__PURE__*/_jsxDEV(Navigator, {\n        handler: navigate,\n        text: periods[index],\n        style: {\n          margin: '0 -22px 0'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WidgetBody, {\n      style: {\n        padding: 0,\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Labels, {\n        children: getMonthArray().map(({\n          month\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: isMobile ? moment(month).month() + 1 : moment(month).format('MMM')\n        }, moment(month).format('MMM'), false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CartesianChart, {\n        variant: \"line\",\n        id: \"patientsGender\",\n        data: data,\n        elems: chartElems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LegendList, {\n        overlay: true,\n        children: [/*#__PURE__*/_jsxDEV(LegendItem, {\n          color: \"azure\",\n          legend: \"men\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LegendItem, {\n          color: \"peach\",\n          legend: \"women\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(PatientsGenderLineChart, \"L419Vv2GxVlJ+KWCDbRSqJkAzDI=\", false, function () {\n  return [useWindowSize, useTheme, useArrayNav];\n});\n_c = PatientsGenderLineChart;\nexport default PatientsGenderLineChart;\nvar _c;\n$RefreshReg$(_c, \"PatientsGenderLineChart\");","map":{"version":3,"names":["colors","light","dark","Labels","Widget","WidgetHeader","WidgetBody","Navigator","CartesianChart","LegendList","LegendItem","useArrayNav","useTheme","useWindowSize","moment","getMonthArray","y2019","y2020","y2021","y2022","rgba","jsxDEV","_jsxDEV","PatientsGenderLineChart","_s","isMobile","width","theme","periods","index","navigate","common","type","strokeWidth","dot","chartElems","dataKey","stroke","azure","activeDot","r","fill","widgetBg","style","filter","peach","currentData","data","name","mobile","children","title","flex","handler","text","margin","fileName","_jsxFileName","lineNumber","columnNumber","padding","overflow","map","month","format","variant","id","elems","overlay","color","legend","_c","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/widgets/PatientsGenderLineChart/index.jsx"],"sourcesContent":["// styling\nimport {colors, light, dark} from '@styles/vars';\n\n// styled components\nimport Labels from '@components/Chart/Labels';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetHeader from '@components/Widget/WidgetHeader';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport Navigator from '@ui/Navigator';\nimport CartesianChart from '@components/CartesianChart';\nimport LegendList from '@ui/Legend';\nimport LegendItem from '@ui/Legend/LegendItem';\n\n// hooks\nimport useArrayNav from '@hooks/useArrayNav';\nimport {useTheme} from 'styled-components'\nimport useWindowSize from '@hooks/useWindowSize';\n\n// utils\nimport moment from 'moment';\nimport {getMonthArray} from '@utils/dates';\n\n// data placeholder\nimport {y2019, y2020, y2021, y2022} from '@db/gender';\nimport {rgba} from 'polished';\n\nconst PatientsGenderLineChart = () => {\n    const isMobile = useWindowSize().width < 768;\n    const {theme} = useTheme();\n    const periods = ['2019', '2020', '2021', '2022'];\n    const {index, navigate} = useArrayNav(periods);\n\n    // common line props\n    const common = {\n        type:\"monotone\",\n        strokeWidth: 3,\n        dot: false\n    }\n\n    const chartElems = [\n        {\n            ...common,\n            dataKey: \"men\",\n            stroke: colors.azure,\n            activeDot: {r: 4, fill: colors.azure, stroke: theme === 'light' ? light.widgetBg : dark.widgetBg, strokeWidth: 2},\n            style: {\n                filter: `drop-shadow(0 0 6px ${rgba(colors.azure, .5)})`\n            }\n        },\n        {\n            ...common,\n            dataKey: \"women\",\n            stroke: colors.peach,\n            activeDot: {r: 4, fill: colors.peach, stroke: theme === 'light' ? light.widgetBg : dark.widgetBg, strokeWidth: 2},\n            style: {\n                filter: `drop-shadow(0 0 6px ${rgba(colors.peach, .5)})`\n            }\n        }\n    ];\n\n    const currentData = () => {\n        switch (periods[index]) {\n            case '2019':\n                return y2019\n            case '2020':\n                return y2020\n            case '2021':\n                return y2021\n            default:\n            case '2022':\n                return y2022\n        }\n    }\n\n    const data = currentData();\n\n    return (\n        <Widget name=\"PatientsGenderLineChart\" mobile={400}>\n            <WidgetHeader title=\"Patients gender\" flex=\"column\">\n                <Navigator handler={navigate} text={periods[index]} style={{margin: '0 -22px 0'}} />\n            </WidgetHeader>\n            <WidgetBody style={{padding: 0, overflow: 'hidden'}}>\n                <Labels>\n                    {\n                        getMonthArray().map(({month}) => (\n                            <div key={moment(month).format('MMM')}>\n                                {isMobile ? moment(month).month() + 1 : moment(month).format('MMM')}\n                            </div>\n                        ))\n                    }\n                </Labels>\n                <CartesianChart variant=\"line\" id=\"patientsGender\" data={data} elems={chartElems} />\n                <LegendList overlay={true}>\n                    <LegendItem color=\"azure\" legend=\"men\" />\n                    <LegendItem color=\"peach\" legend=\"women\" />\n                </LegendList>\n            </WidgetBody>\n        </Widget>\n    )\n}\n\nexport default PatientsGenderLineChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}