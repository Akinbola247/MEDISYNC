{"ast":null,"code":"var _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/widgets/PatientsList/Group/index.jsx\";\n// components\nimport GroupSeparator from '@ui/GroupSeparator';\nimport PersonList from '@components/PersonList';\n\n// utils\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Group = ({\n  char,\n  arr,\n  type,\n  gender\n}) => {\n  const data = arr.filter(item => item.lastName.charAt(0).toLowerCase() === char);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: char,\n      children: [/*#__PURE__*/_jsxDEV(GroupSeparator, {\n        text: char\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(PersonList, {\n        arr: data,\n        type: type,\n        gender: gender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }, this) : null\n  }, void 0, false);\n};\n_c = Group;\nGroup.propTypes = {\n  char: PropTypes.string.isRequired,\n  arr: PropTypes.array.isRequired,\n  type: PropTypes.oneOf(['patient', 'doctor', 'staff']).isRequired\n};\nexport default Group;\nvar _c;\n$RefreshReg$(_c, \"Group\");","map":{"version":3,"names":["GroupSeparator","PersonList","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","Group","char","arr","type","gender","data","filter","item","lastName","charAt","toLowerCase","children","length","id","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","array","oneOf","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/widgets/PatientsList/Group/index.jsx"],"sourcesContent":["// components\nimport GroupSeparator from '@ui/GroupSeparator';\nimport PersonList from '@components/PersonList';\n\n// utils\nimport PropTypes from \"prop-types\";\n\nconst Group = ({char, arr, type, gender}) => {\n    const data = arr.filter(item => item.lastName.charAt(0).toLowerCase() === char);\n\n    return (\n        <>\n            {\n                data.length !== 0 ?\n                    <div id={char}>\n                        <GroupSeparator text={char} />\n                        <PersonList arr={data} type={type} gender={gender} />\n                    </div> : null\n            }\n        </>\n    )\n}\n\nGroup.propTypes = {\n    char: PropTypes.string.isRequired,\n    arr: PropTypes.array.isRequired,\n    type: PropTypes.oneOf(['patient', 'doctor', 'staff']).isRequired,\n}\n\nexport default Group;"],"mappings":";AAAA;AACA,OAAOA,cAAc,MAAM,oBAAoB;AAC/C,OAAOC,UAAU,MAAM,wBAAwB;;AAE/C;AACA,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,KAAK,GAAGA,CAAC;EAACC,IAAI;EAAEC,GAAG;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EACzC,MAAMC,IAAI,GAAGH,GAAG,CAACI,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,KAAKT,IAAI,CAAC;EAE/E,oBACIJ,OAAA,CAAAE,SAAA;IAAAY,QAAA,EAEQN,IAAI,CAACO,MAAM,KAAK,CAAC,gBACbf,OAAA;MAAKgB,EAAE,EAAEZ,IAAK;MAAAU,QAAA,gBACVd,OAAA,CAACJ,cAAc;QAACqB,IAAI,EAAEb;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9BrB,OAAA,CAACH,UAAU;QAACQ,GAAG,EAAEG,IAAK;QAACF,IAAI,EAAEA,IAAK;QAACC,MAAM,EAAEA;MAAO;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,GAAG;EAAI,gBAEvB,CAAC;AAEX,CAAC;AAAAC,EAAA,GAdKnB,KAAK;AAgBXA,KAAK,CAACoB,SAAS,GAAG;EACdnB,IAAI,EAAEN,SAAS,CAAC0B,MAAM,CAACC,UAAU;EACjCpB,GAAG,EAAEP,SAAS,CAAC4B,KAAK,CAACD,UAAU;EAC/BnB,IAAI,EAAER,SAAS,CAAC6B,KAAK,CAAC,CAAC,SAAS,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC,CAACF;AAC1D,CAAC;AAED,eAAetB,KAAK;AAAC,IAAAmB,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}