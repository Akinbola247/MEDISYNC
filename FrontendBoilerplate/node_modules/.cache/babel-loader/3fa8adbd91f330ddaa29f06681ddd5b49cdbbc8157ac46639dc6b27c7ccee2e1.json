{"ast":null,"code":"import _styled from \"styled-components\"; // styling\nvar _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/UI/SearchBar/index.jsx\",\n  _s = $RefreshSig$();\nimport theme from 'styled-theming';\nimport { light, dark, textSizes, colors, fonts, breakpoints } from '@styles/vars';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport useWindowSize from '@hooks/useWindowSize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBarForm = _styled.form.withConfig({\n  displayName: \"SearchBar__SearchBarForm\",\n  componentId: \"sc-1bp3jxs-0\"\n})([\"height:40px;margin:0 24px;border-radius:8px;padding:0 22px;background-color:\", \";display:flex;flex-grow:1;align-items:center;\", \"{height:60px;margin:0 2px;}label{font-size:\", \";margin-right:24px;color:\", \";}input{width:100%;font-size:\", \";font-family:\", \";&::placeholder{color:\", \";}}button[type=\\\"reset\\\"]{opacity:0;transition:opacity var(--transition);&.visible{opacity:1;}}\"], theme('theme', {\n  light: light.bodyBg,\n  dark: dark.bodyBg\n}), breakpoints.tablet, textSizes['12'], colors.gray, textSizes['16'], fonts.accent, light.text);\n_c = SearchBarForm;\nconst SearchBar = ({\n  placeholder,\n  handler,\n  value\n}) => {\n  _s();\n  const window = useWindowSize();\n  const isMobile = window.width < 767.98;\n  const handleReset = () => handler('');\n  return /*#__PURE__*/_jsxDEV(SearchBarForm, {\n    action: \"#\",\n    method: \"get\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"search_bar-label\",\n      htmlFor: \"widgetSearch\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"icon icon-search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      id: \"widgetSearch\",\n      value: value,\n      placeholder: !isMobile ? placeholder : 'Search',\n      onChange: e => handler(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: value !== '' ? 'visible' : '',\n      type: \"reset\",\n      onClick: handleReset,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"icon icon-close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchBar, \"D8oP3jETIB4waJH6sU+CrRCY4dg=\", false, function () {\n  return [useWindowSize];\n});\n_c2 = SearchBar;\nSearchBar.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  handler: PropTypes.func.isRequired\n};\nexport default SearchBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchBarForm\");\n$RefreshReg$(_c2, \"SearchBar\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","theme","light","dark","textSizes","colors","fonts","breakpoints","PropTypes","useWindowSize","jsxDEV","_jsxDEV","SearchBarForm","styled","form","withConfig","displayName","componentId","bodyBg","tablet","gray","accent","text","_c","SearchBar","placeholder","handler","value","window","isMobile","width","handleReset","action","method","children","className","htmlFor","fileName","lineNumber","columnNumber","type","id","onChange","e","target","onClick","_c2","propTypes","string","isRequired","func","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/UI/SearchBar/index.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport theme from 'styled-theming';\nimport {light, dark, textSizes, colors, fonts, breakpoints} from '@styles/vars';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport useWindowSize from '@hooks/useWindowSize';\n\nconst SearchBarForm = styled.form`\n  height: 40px;\n  margin: 0 24px;\n  border-radius: 8px;\n  padding: 0 22px;\n  background-color: ${theme('theme', {\n    light: light.bodyBg,\n    dark: dark.bodyBg\n  })};\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n  \n  ${breakpoints.tablet} {\n    height: 60px;\n    margin: 0 2px;\n  }\n  \n  label {\n    font-size: ${textSizes['12']};\n    margin-right: 24px;\n    color: ${colors.gray};\n  }\n  \n  input {\n    width: 100%;\n    font-size: ${textSizes['16']};\n    font-family: ${fonts.accent};\n    &::placeholder {\n      color: ${light.text};\n    }\n  }\n  \n  button[type=\"reset\"] {\n    opacity: 0;\n    transition: opacity var(--transition);\n    \n    &.visible {\n        opacity: 1;\n    }\n  }\n`\n\nconst SearchBar = ({placeholder, handler, value}) => {\n    const window = useWindowSize();\n    const isMobile = window.width < 767.98;\n\n    const handleReset = () => handler('');\n\n    return (\n        <SearchBarForm action=\"#\" method=\"get\">\n            <label className=\"search_bar-label\" htmlFor=\"widgetSearch\">\n                <i className=\"icon icon-search\"></i>\n            </label>\n            <input type=\"search\"\n                   id=\"widgetSearch\"\n                   value={value}\n                   placeholder={!isMobile ? placeholder : 'Search'}\n                   onChange={e => handler(e.target.value)} />\n            <button className={value !== '' ? 'visible' : ''} type=\"reset\" onClick={handleReset}>\n                <i className=\"icon icon-close\" />\n            </button>\n        </SearchBarForm>\n    )\n}\n\nSearchBar.propTypes = {\n    placeholder: PropTypes.string.isRequired,\n    handler: PropTypes.func.isRequired\n}\n\nexport default SearchBar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}