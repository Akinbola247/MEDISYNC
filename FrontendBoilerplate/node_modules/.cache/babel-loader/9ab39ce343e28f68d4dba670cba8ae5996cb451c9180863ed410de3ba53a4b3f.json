{"ast":null,"code":"var _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/components/GenderNav/index.jsx\";\n// styled components\nimport { Container, Item, Button } from '@ui/TabNav/style';\n\n// utils\nimport { nanoid } from \"nanoid\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavButton = ({\n  state,\n  filter,\n  handler\n}) => {\n  const isActive = state.value === filter.value;\n  return /*#__PURE__*/_jsxDEV(Button, {\n    className: isActive ? 'active' : '',\n    onClick: () => handler({\n      value: filter.value,\n      label: filter.label\n    }),\n    children: filter.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_c = NavButton;\nconst GenderNav = ({\n  state,\n  handler\n}) => {\n  const options = [{\n    value: 'all',\n    label: 'all'\n  }, {\n    value: 'male',\n    label: 'Men'\n  }, {\n    value: 'female',\n    label: 'Women'\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    as: \"ul\",\n    className: \"gender\",\n    children: options.map(item => {\n      return /*#__PURE__*/_jsxDEV(Item, {\n        children: /*#__PURE__*/_jsxDEV(NavButton, {\n          state: state,\n          filter: item,\n          handler: handler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this)\n      }, nanoid(3), false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_c2 = GenderNav;\nGenderNav.propTypes = {\n  state: PropTypes.object.isRequired,\n  handler: PropTypes.func.isRequired\n};\nexport default GenderNav;\nvar _c, _c2;\n$RefreshReg$(_c, \"NavButton\");\n$RefreshReg$(_c2, \"GenderNav\");","map":{"version":3,"names":["Container","Item","Button","nanoid","PropTypes","jsxDEV","_jsxDEV","NavButton","state","filter","handler","isActive","value","className","onClick","label","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","GenderNav","options","as","map","item","_c2","propTypes","object","isRequired","func","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/components/GenderNav/index.jsx"],"sourcesContent":["// styled components\nimport {Container, Item, Button} from '@ui/TabNav/style';\n\n// utils\nimport {nanoid} from \"nanoid\";\nimport PropTypes from \"prop-types\";\n\nconst NavButton = ({state, filter, handler}) => {\n    const isActive = state.value === filter.value;\n    return (\n        <Button className={isActive ? 'active' : ''}\n                onClick={() => handler({value: filter.value, label: filter.label})}\n        >\n            {filter.label}\n        </Button>\n    )\n}\n\nconst GenderNav = ({state, handler}) => {\n    const options = [\n        {\n            value: 'all',\n            label: 'all'\n        },\n        {\n            value: 'male',\n            label: 'Men'\n        },\n        {\n            value: 'female',\n            label: 'Women'\n        }\n    ];\n\n    return (\n        <Container as=\"ul\" className=\"gender\">\n            {\n                options.map(item => {\n                    return (\n                        <Item key={nanoid(3)}>\n                            <NavButton state={state} filter={item} handler={handler} />\n                        </Item>\n                    )\n                })\n            }\n        </Container>\n    )\n}\n\nGenderNav.propTypes = {\n    state: PropTypes.object.isRequired,\n    handler: PropTypes.func.isRequired\n}\n\nexport default GenderNav;"],"mappings":";AAAA;AACA,SAAQA,SAAS,EAAEC,IAAI,EAAEC,MAAM,QAAO,kBAAkB;;AAExD;AACA,SAAQC,MAAM,QAAO,QAAQ;AAC7B,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,SAAS,GAAGA,CAAC;EAACC,KAAK;EAAEC,MAAM;EAAEC;AAAO,CAAC,KAAK;EAC5C,MAAMC,QAAQ,GAAGH,KAAK,CAACI,KAAK,KAAKH,MAAM,CAACG,KAAK;EAC7C,oBACIN,OAAA,CAACJ,MAAM;IAACW,SAAS,EAAEF,QAAQ,GAAG,QAAQ,GAAG,EAAG;IACpCG,OAAO,EAAEA,CAAA,KAAMJ,OAAO,CAAC;MAACE,KAAK,EAAEH,MAAM,CAACG,KAAK;MAAEG,KAAK,EAAEN,MAAM,CAACM;IAAK,CAAC,CAAE;IAAAC,QAAA,EAEtEP,MAAM,CAACM;EAAK;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEjB,CAAC;AAAAC,EAAA,GATKd,SAAS;AAWf,MAAMe,SAAS,GAAGA,CAAC;EAACd,KAAK;EAAEE;AAAO,CAAC,KAAK;EACpC,MAAMa,OAAO,GAAG,CACZ;IACIX,KAAK,EAAE,KAAK;IACZG,KAAK,EAAE;EACX,CAAC,EACD;IACIH,KAAK,EAAE,MAAM;IACbG,KAAK,EAAE;EACX,CAAC,EACD;IACIH,KAAK,EAAE,QAAQ;IACfG,KAAK,EAAE;EACX,CAAC,CACJ;EAED,oBACIT,OAAA,CAACN,SAAS;IAACwB,EAAE,EAAC,IAAI;IAACX,SAAS,EAAC,QAAQ;IAAAG,QAAA,EAE7BO,OAAO,CAACE,GAAG,CAACC,IAAI,IAAI;MAChB,oBACIpB,OAAA,CAACL,IAAI;QAAAe,QAAA,eACDV,OAAA,CAACC,SAAS;UAACC,KAAK,EAAEA,KAAM;UAACC,MAAM,EAAEiB,IAAK;UAAChB,OAAO,EAAEA;QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADpDjB,MAAM,CAAC,CAAC,CAAC;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CAAC;IAEf,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEpB,CAAC;AAAAO,GAAA,GA7BKL,SAAS;AA+BfA,SAAS,CAACM,SAAS,GAAG;EAClBpB,KAAK,EAAEJ,SAAS,CAACyB,MAAM,CAACC,UAAU;EAClCpB,OAAO,EAAEN,SAAS,CAAC2B,IAAI,CAACD;AAC5B,CAAC;AAED,eAAeR,SAAS;AAAC,IAAAD,EAAA,EAAAM,GAAA;AAAAK,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAL,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}