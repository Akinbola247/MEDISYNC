{"ast":null,"code":"import _styled from \"styled-components\"; // styling\nvar _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/UI/ActionButton/index.jsx\";\nimport { textSizes, light, colors, flex, breakpoints } from '@styles/vars';\n\n// utils\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _styled.button.withConfig({\n  displayName: \"ActionButton__Button\",\n  componentId: \"sc-oamroi-0\"\n})([\"display:flex;\", \";gap:8px;border-radius:20px;font-size:\", \";height:40px;width:40px;color:\", \";transition:color var(--transition),background-color var(--transition);.icon{color:\", \";transition:color var(--transition);}.text{display:none;}&:hover,&:focus{background-color:\", \";color:#fff;.icon{color:#fff;}}\", \"{width:fit-content;padding:0 16px;.text{display:block;}}\"], flex.center, textSizes['14'], light.text, colors.gray, colors.blue, breakpoints.mobileL);\n_c = Button;\nconst ActionButton = ({\n  handler,\n  user = 'doctor'\n}) => {\n  const options = {\n    icon: user === 'doctor' ? 'painmap' : 'plus-circle',\n    text: user === 'doctor' ? 'Case history' : 'Make an appointment'\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    className: \"btn-action\",\n    onClick: handler,\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: `icon icon-${options.icon}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text\",\n      children: options.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 61\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_c2 = ActionButton;\nActionButton.propTypes = {\n  handler: PropTypes.func,\n  user: PropTypes.oneOf(['doctor', 'patient'])\n};\nexport default ActionButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"ActionButton\");","map":{"version":3,"names":["_jsxFileName","textSizes","light","colors","flex","breakpoints","PropTypes","jsxDEV","_jsxDEV","Button","styled","button","withConfig","displayName","componentId","center","text","gray","blue","mobileL","_c","ActionButton","handler","user","options","icon","className","onClick","children","fileName","lineNumber","columnNumber","_c2","propTypes","func","oneOf","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/UI/ActionButton/index.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\nimport {textSizes, light, colors, flex, breakpoints} from '@styles/vars';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Button = styled.button`\n  display: flex;\n  ${flex.center};\n  gap: 8px;\n  border-radius: 20px;\n  font-size: ${textSizes['14']};\n  height: 40px;\n  width: 40px;\n  color: ${light.text};\n  transition: color var(--transition), background-color var(--transition);\n\n  .icon {\n    color: ${colors.gray};\n    transition: color var(--transition);\n  }\n\n  .text {\n    display: none;\n  }\n\n  &:hover, &:focus {\n    background-color: ${colors.blue};\n    color: #fff;\n\n    .icon {\n      color: #fff;\n    }\n  }\n\n  ${breakpoints.mobileL} {\n    width: fit-content;\n    padding: 0 16px;\n    .text {\n      display: block;\n    }\n  }\n`\n\nconst ActionButton = ({handler, user = 'doctor'}) => {\n    const options = {\n        icon: user === 'doctor' ? 'painmap' : 'plus-circle',\n        text: user === 'doctor' ? 'Case history' : 'Make an appointment',\n    }\n    return (\n        <Button className=\"btn-action\" onClick={handler}>\n            <i className={`icon icon-${options.icon}`}></i> <span className=\"text\">{options.text}</span>\n        </Button>\n    )\n}\n\nActionButton.propTypes = {\n    handler: PropTypes.func,\n    user: PropTypes.oneOf(['doctor', 'patient'])\n}\n\nexport default ActionButton;"],"mappings":"yCAAA;AAAA,IAAAA,YAAA;AAEA,SAAQC,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,WAAW,QAAO,cAAc;;AAExE;AACA,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,MAAM,GAAGC,OAAM,CAACC,MAAM,CAAAC,UAAA;EAAAC,WAAA;EAAAC,WAAA;AAAA,sXAExBV,IAAI,CAACW,MAAM,EAGAd,SAAS,CAAC,IAAI,CAAC,EAGnBC,KAAK,CAACc,IAAI,EAIRb,MAAM,CAACc,IAAI,EASAd,MAAM,CAACe,IAAI,EAQ/Bb,WAAW,CAACc,OAAO,CAOtB;AAAAC,EAAA,GApCKX,MAAM;AAsCZ,MAAMY,YAAY,GAAGA,CAAC;EAACC,OAAO;EAAEC,IAAI,GAAG;AAAQ,CAAC,KAAK;EACjD,MAAMC,OAAO,GAAG;IACZC,IAAI,EAAEF,IAAI,KAAK,QAAQ,GAAG,SAAS,GAAG,aAAa;IACnDP,IAAI,EAAEO,IAAI,KAAK,QAAQ,GAAG,cAAc,GAAG;EAC/C,CAAC;EACD,oBACIf,OAAA,CAACC,MAAM;IAACiB,SAAS,EAAC,YAAY;IAACC,OAAO,EAAEL,OAAQ;IAAAM,QAAA,gBAC5CpB,OAAA;MAAGkB,SAAS,EAAG,aAAYF,OAAO,CAACC,IAAK;IAAE;MAAAI,QAAA,EAAA7B,YAAA;MAAA8B,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC,eAAAvB,OAAA;MAAMkB,SAAS,EAAC,MAAM;MAAAE,QAAA,EAAEJ,OAAO,CAACR;IAAI;MAAAa,QAAA,EAAA7B,YAAA;MAAA8B,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAF,QAAA,EAAA7B,YAAA;IAAA8B,UAAA;IAAAC,YAAA;EAAA,OACxF,CAAC;AAEjB,CAAC;AAAAC,GAAA,GAVKX,YAAY;AAYlBA,YAAY,CAACY,SAAS,GAAG;EACrBX,OAAO,EAAEhB,SAAS,CAAC4B,IAAI;EACvBX,IAAI,EAAEjB,SAAS,CAAC6B,KAAK,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC;AAC/C,CAAC;AAED,eAAed,YAAY;AAAC,IAAAD,EAAA,EAAAY,GAAA;AAAAI,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAJ,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}