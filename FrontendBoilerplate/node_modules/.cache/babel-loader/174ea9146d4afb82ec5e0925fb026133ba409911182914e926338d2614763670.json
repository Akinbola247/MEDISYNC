{"ast":null,"code":"var _jsxFileName = \"/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/widgets/UserSettings/index.jsx\";\n// styled components\nimport { SettingsHeader } from '@widgets/UserSettings/style';\nimport { Divider } from '@components/Widget/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport { Tab } from 'react-bootstrap';\nimport TabNav from '@ui/TabNav';\nimport TabNavItem from '@ui/TabNav/TabNavItem';\nimport Form from './Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserSettings = () => {\n  return /*#__PURE__*/_jsxDEV(Widget, {\n    name: \"UserSettings\",\n    children: /*#__PURE__*/_jsxDEV(Tab.Container, {\n      defaultActiveKey: \"patient\",\n      transition: true,\n      children: [/*#__PURE__*/_jsxDEV(SettingsHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: \"Your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TabNav, {\n            children: [/*#__PURE__*/_jsxDEV(TabNavItem, {\n              eventKey: \"patient\",\n              title: \"Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TabNavItem, {\n              eventKey: \"doctor\",\n              title: \"Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WidgetBody, {\n        children: /*#__PURE__*/_jsxDEV(Tab.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n            eventKey: \"patient\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              type: \"patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n            eventKey: \"doctor\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              type: \"doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = UserSettings;\nexport default UserSettings;\nvar _c;\n$RefreshReg$(_c, \"UserSettings\");","map":{"version":3,"names":["SettingsHeader","Divider","Widget","WidgetBody","Tab","TabNav","TabNavItem","Form","jsxDEV","_jsxDEV","UserSettings","name","children","Container","defaultActiveKey","transition","className","fileName","_jsxFileName","lineNumber","columnNumber","eventKey","title","Content","Pane","type","_c","$RefreshReg$"],"sources":["/Users/kenzman/Desktop/ethglobal/MEDISYNC/Frontend Boilerplate/src/widgets/UserSettings/index.jsx"],"sourcesContent":["// styled components\nimport {SettingsHeader} from '@widgets/UserSettings/style';\nimport {Divider} from '@components/Widget/style';\n\n// components\nimport Widget from '@components/Widget';\nimport WidgetBody from '@components/Widget/WidgetBody';\nimport {Tab} from 'react-bootstrap'\nimport TabNav from '@ui/TabNav';\nimport TabNavItem from '@ui/TabNav/TabNavItem';\nimport Form from './Form';\n\nconst UserSettings = () => {\n    return (\n        <Widget name=\"UserSettings\">\n            <Tab.Container defaultActiveKey=\"patient\" transition={true}>\n                <SettingsHeader>\n                    <div className=\"wrapper\">\n                        <h2 className=\"title\">Your account</h2>\n                        <TabNav>\n                            <TabNavItem eventKey=\"patient\" title=\"Patient\" />\n                            <TabNavItem eventKey=\"doctor\" title=\"Doctor\" />\n                        </TabNav>\n                    </div>\n                    <Divider />\n                </SettingsHeader>\n                <WidgetBody>\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"patient\">\n                            <Form type=\"patient\" />\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"doctor\">\n                            <Form type=\"doctor\" />\n                        </Tab.Pane>\n                    </Tab.Content>\n                </WidgetBody>\n            </Tab.Container>\n        </Widget>\n    )\n}\n\nexport default UserSettings;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}